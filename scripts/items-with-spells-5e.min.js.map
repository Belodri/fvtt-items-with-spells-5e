{"version":3,"file":"items-with-spells-5e.min.js","sources":["classes/defaults.js","classes/actor-sheet.js","classes/actor.js","classes/item-spell-overrides.js","classes/item.js","classes/item-sheet.js","classes/settings.mjs","extensions/token-action-hud-dnd5e.js","init.js"],"sourcesContent":["export class ItemsWithSpells5e {\n  static MODULE_ID = 'items-with-spells-5e';\n  static SETTINGS = {};\n  static FLAGS = {\n    itemSpells: 'item-spells',\n    parentItem: 'parent-item',\n    knownUuid: 'original-uuid'\n  };\n  static TEMPLATES = {\n    spellsTab: `modules/${ItemsWithSpells5e.MODULE_ID}/templates/spells-tab.hbs`,\n    overrides: `modules/${ItemsWithSpells5e.MODULE_ID}/templates/overrides-form.hbs`\n  };\n\n  static init() {\n    ItemsWithSpells5e.preloadTemplates();\n  }\n\n  static preloadTemplates() {\n    dnd5e.utils.registerHandlebarsHelpers();\n    loadTemplates(ItemsWithSpells5e.TEMPLATES);\n  }\n\n  /**\n   * Test if an item is an items-with-spells-5e item\n   * @public\n   * @param {Item5e[]} item The item to get the attached spells from\n   * @returns the object with the spells\n   */\n  static isIwsItem(item) {\n    if (typeof item === 'string') item = fromUuidSync(item);\n    const itemSpells = item?.getFlag(ItemsWithSpells5e.MODULE_ID, ItemsWithSpells5e.FLAGS.itemSpells) ?? [];\n    return itemSpells.length ? itemSpells : null;\n  }\n\n  /**\n   * Test if a spell has a parent item by seeing if a parent id is set\n   * @public\n   * @param {Item5e[]} spell The spell with a parent item\n   * @returns the parent item id or `null` if no parent item is found\n   * `isIwsSpell` exposed in the api as alias for this\n   */\n  static getSpellParentId(spell) {\n    if (typeof spell === 'string') spell = fromUuidSync(spell);\n    return spell.getFlag(ItemsWithSpells5e.MODULE_ID, ItemsWithSpells5e.FLAGS.parentItem) ?? null;\n  }\n\n  /**\n   * Get the parent item of a spell on the same actor\n   * @public\n   * @param {Item5e[]} spell The spell to get the parent item of\n   * @param {boolean} embeddedOnly Only return the item if owned by an actor\n   * @param {Map} providedItems Only return spells included in these items (e.g. pass actor.items)\n   * @returns the parent item or `null` if spell has no parent or parent is not owned by the same actor\n   */\n  static async getSpellParentItem(spell, embeddedOnly = false, providedItems = false) {\n    if (typeof spell === 'string') spell = await fromUuid(spell);\n    if (embeddedOnly && !spell.isEmbedded) return null;\n    const parentId = ItemsWithSpells5e.getSpellParentId(spell);\n    if (!parentId) return null;\n    const items = providedItems ?? spell.actor?.items ?? false;\n    if (embeddedOnly && !items) {\n      return null;\n    } else if (items) {\n      const parentIdLast = parentId.split('.').pop();\n      return items.get(parentIdLast) ?? null;\n    } else {\n      return await fromUuid(parentId);\n    }\n  }\n\n  /**\n   * Test if a type of item is enabled to have the spells tab from items-with-spells-5e\n   * @public\n   * @param {string} itemType The spell with a parent item\n   * @returns {boolean} true if spells tab should be visible\n   */\n  static isIncludedItemType(itemType) {\n    let include = false;\n    try {\n      include = !!game.settings.get(\n        ItemsWithSpells5e.MODULE_ID,\n        `isIncludedItemType${itemType.titleCase()}`\n      );\n    } catch {}\n    return include;\n  }\n\n  /**\n   * Test if the spells of an item should be shown (item is attuned, equipped, identified)\n   * @public\n   * @param {Item5e[]} item The parent item of the spell(s)\n   * @returns {boolean} true if item should be shown\n   */\n  static isUsableItem(item) {\n    if (typeof item === 'string') item = fromUuidSync(item);\n    // Unusable if item is not identified\n    if (item.system?.identified === false) return false;\n    // Unusable if item is not equipped and setting set to exclude based unequipped\n    const iwsExcludeUnequipped = game.settings.get(ItemsWithSpells5e.MODULE_ID, \"excludeUnequipped\");\n    if (iwsExcludeUnequipped && item.system.equipped === false) return false;\n    // Unusable if item is not attuned (but still show to GM)\n    if (!game.user.isGM) {\n      if (foundry.utils.isNewerVersion(game.system.version, \"3.1.99\")) {\n        const attunementRequired = item.system?.attunement === \"required\";\n        if (attunementRequired && !item.system?.attuned) return false;\n      } else {\n        const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\n        if (item.system?.attunement === attunementRequired) return false;\n      }\n    }\n    return true;\n  }\n}","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n/* A class made to make managing the operations for an Actor. */\nexport class ItemsWithSpells5eActorSheet {\n  /* Set up the Actor Sheet Patch */\n  static init() {\n    const id = IWS.MODULE_ID;\n    const fn = ItemsWithSpells5eActorSheet.prepareItemSpellbook;\n    [\"Character\", \"NPC\"].forEach(a => {\n      libWrapper.register(id, `dnd5e.applications.actor.ActorSheet5e${a}.prototype._prepareSpellbook`, fn, \"WRAPPER\");\n    });\n  }\n\n  /**\n   * Filter iws spells into their own sections, removing them from standard sections.\n   * @param {Function} wrapped      A wrapping function.\n   * @param {object} data           The sheet data. **will be mutated**\n   * @param {Item5e[]} spells       The actor's spells.\n   * @returns {object}              The spellbook data.\n   */\n  static prepareItemSpellbook(wrapped, data, spells) {\n    const order = game.settings.get(IWS.MODULE_ID, \"sortOrder\") ? 20 : -5;\n    const createSection = (iws, uses = {}, spells = []) => {\n      return {\n        order: order,\n        label: iws.name,\n        usesSlots: false,\n        canCreate: false,\n        canPrepare: false,\n        spells,\n        uses: uses.value ?? \"-\",\n        slots: uses.max ?? \"-\",\n        override: 0,\n        dataset: {\"iws-item-id\": iws.id},\n        prop: \"item-\"+iws.id\n      };\n    };\n\n    // iterate through spells and put them in respective maps\n    const nonItemSpells = [];\n    const spellsPerItem = new Map();\n    spells.forEach((spell) => {\n      const parentId = IWS.getSpellParentId(spell);\n      if ( parentId && this.actor.items.some(item => [item.id, item.uuid].includes(parentId)) ) {\n        const parentIdLast = parentId.split('.').pop();\n        if (!spellsPerItem.get(parentIdLast)) spellsPerItem.set(parentIdLast, []);\n        spellsPerItem.get(parentIdLast).push(spell);\n      } else {\n        nonItemSpells.push(spell);\n      }\n    });\n\n    const spellbook = wrapped(data, nonItemSpells);\n\n    // get all the items with spells on this actor\n    const itemsWithSpells = this.actor.items.filter(item => {\n      const fl = item.getFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells)?.length;\n      if (!fl) return false;\n      const include = IWS.isIncludedItemType(item.type);\n      return include;\n    });\n\n    // create a new spellbook section for each item with spells attached\n    itemsWithSpells.forEach((iws) => {\n      const iwsSpells = spellsPerItem.get(iws.id);\n      if (!iwsSpells) return;\n      const iwsUsable = IWS.isUsableItem(iws);\n      if (!iwsUsable) return;\n      const section = createSection(iws, iws.system.uses, iwsSpells);\n      spellbook.push(section);\n    });\n\n    spellbook.sort((a, b) => (a.order - b.order) || (a.label - b.label));\n    return spellbook;\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n/**\n * A class made to make managing the operations for an Actor.\n */\nexport class ItemsWithSpells5eActor {\n  /* Set up the create/delete Item hooks. */\n  static init() {\n    Hooks.on('createItem', ItemsWithSpells5eActor.handleCreateItem);\n    Hooks.on('deleteItem', ItemsWithSpells5eActor.handleDeleteItem);\n  }\n\n  /**\n   * When an item is deleted from an actor, find any of its child spells and prompt for those to be deleted.\n   * @param {Item5e} itemDeleted            The parent item that was deleted.\n   * @param {object} options                Deletion options.\n   * @param {string} userId                 The id of the user who performed the deletion.\n   * @returns {Promise<Item5e[]|void>}      The deleted spells.\n   */\n  static async handleDeleteItem(itemDeleted, options, userId) {\n    if (userId !== game.user.id) return;\n    if (!(itemDeleted.parent instanceof Actor)) return;\n    if ([\"group\", \"vehicle\"].includes(itemDeleted.parent.type)) return;\n\n    const ids = IWS.isIwsItem(itemDeleted);\n    if (!ids) return;\n\n    const spellIds = itemDeleted.actor.items.reduce((acc, item) => {\n      const flag = IWS.getSpellParentId(item);\n      if ([itemDeleted.id, itemDeleted.uuid].includes(flag)) acc.push(item.id);// check uuid, too, for backwards compat.\n      return acc;\n    }, []);\n\n    if (!spellIds.length) return;\n\n    // Ask the player to confirm spell deletion, unless the option for this is set, or unless the item is unidentified and the player doesn't know spells are attached (always ask for GM)\n    const optionOverride = options.itemsWithSpells5e?.alsoDeleteChildSpells;\n    const autoConfirm = !game.user.isGM && itemDeleted.system?.identified === false;\n    const confirm = optionOverride ?? autoConfirm ? true : await Dialog.confirm({\n      title: game.i18n.localize(\"IWS.MODULE_NAME\"),\n      content: game.i18n.localize(\"IWS.DIALOG.AlsoDeleteSpell\")\n    });\n    if (confirm) return itemDeleted.actor.deleteEmbeddedDocuments(\"Item\", spellIds);\n  }\n\n  /**\n   * When an item is created on an actor, if it has any spells to add, create those, and save\n   * a reference to their uuids and ids in the parent item within `flags.<module>.item-spells`.\n   * Each added spell also gets `flags.<module>.parent-item` being the parent item's id.\n   * @param {Item5e} itemCreated      The item with spells that was created.\n   * @param {object} options          Creation options.\n   * @param {string} userId           The id of the user creating the item.\n   * @returns {Promise<Item5e>}       The parent item updated with new flag data.\n   */\n  static async handleCreateItem(itemCreated, options, userId) {\n    if (userId !== game.user.id) return;\n    if (!(itemCreated.parent instanceof Actor)) return;\n    if ([\"group\", \"vehicle\"].includes(itemCreated.parent.type)) return;\n\n    // bail out from creating the spells if the parent item is not valid.\n    const include = IWS.isIncludedItemType(itemCreated.type);\n    if (!include) return;\n\n    // Get array of objects with uuids of spells to create.\n    const spellUuids = IWS.isIwsItem(itemCreated);\n    if (!spellUuids) return;\n\n    // Create the spells from this item.\n    const spells = await Promise.all(spellUuids.map(d => ItemsWithSpells5eActor._createSpellData(itemCreated, d)));\n\n    // While filtering spells, create array with override objects, matching spellData index\n    const overridesData = [];\n    const spellData = spells.filter((s, idx) => s ? overridesData.push(spellUuids[idx]?.changes) : false);\n\n    // Add the spells to the actor\n    const spellsCreated = await itemCreated.actor.createEmbeddedDocuments(\"Item\", spellData);\n\n    // Keep the changes settings for each spell in case the item is ever put back into the sidebar\n    const ids = spellsCreated.map((s, idx) => ({uuid: s.uuid, id: s.id, changes: overridesData[idx]}));\n    return itemCreated.setFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells, ids);\n  }\n\n  /**\n   * Create the data for a spell with attack bonus, limited uses, references, and overrides.\n   * @param {Item5e} parentItem     The item that has spells.\n   * @param {object} data           Object with uuid and overrides.\n   * @returns {Promise<object>}     The item data for creation of a spell.\n   */\n  static async _createSpellData(parentItem, data) {\n    const spell = await fromUuid(data.uuid);\n    if (!spell) return null;\n\n    // Adjust attack bonus.\n    const changes = data.changes?.system || {};\n    if (changes.attackBonus && !changes.attack) {\n      changes.attack = {\n        bonus: changes.attackBonus,\n        flat: true\n      }\n    } else if (changes.attack?.bonus) {\n      changes.attack.flat = true;\n    }\n\n    // Adjust limited uses.\n    const usesMax = changes.uses?.max;\n    if (usesMax) {\n      const rollData = parentItem.getRollData({deterministic: true});\n      changes.uses.value = dnd5e.utils.simplifyBonus(usesMax, rollData);\n    }\n\n    // Adjust item id for consumption.\n    if (changes.consume?.amount) {\n      changes.consume.type = \"charges\";\n      changes.consume.target = parentItem.id;\n    }\n\n    // Create and return spell data.\n    const spellData = game.items.fromCompendium(spell);\n    const mergeData = {\n      [`flags.${IWS.MODULE_ID}.${IWS.FLAGS.parentItem}`]: parentItem.id,\n      system: {...changes, \"preparation.mode\": \"atwill\"}\n    };\n    const tidy5eSectionFlag = spell.flags['tidy5e-sheet']?.section;\n    if (tidy5eSectionFlag) {\n      mergeData['flags.tidy5e-sheet.section'] = null;\n    }\n    return foundry.utils.mergeObject(spellData, mergeData);\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n/**\n * The form to control Item Spell overrides (e.g. for consumption logic)\n */\nexport class ItemsWithSpells5eItemSpellOverrides extends FormApplication {\n  constructor(itemWithSpellsItem, itemSpellId) {\n    const itemSpellFlagData = itemWithSpellsItem.itemSpellFlagMap.get(itemSpellId);\n    // set the `object` of this FormApplication as the itemSpell data from the parent item's flags\n    super(itemSpellFlagData?.changes ?? {});\n\n    // the spell we are editing\n    this.itemSpellId = itemSpellId;\n\n    // the ItemsWithSpells5eItem instance to use\n    this.itemWithSpellsItem = itemWithSpellsItem;\n\n    // the parent item\n    this.item = itemWithSpellsItem.item;\n\n    // the fake or real spell item\n    this.itemSpellItem = itemWithSpellsItem.itemSpellItemMap.get(itemSpellId);\n  }\n\n  get id() {\n    return `${IWS.MODULE_ID}-${this.item.id}-${this.itemSpellItem.id}`;\n  }\n\n  get title() {\n    return `${this.item.name} - ${this.itemSpellItem.name}`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: ['dnd5e', 'sheet', 'item', \"iws\"],\n      template: IWS.TEMPLATES.overrides,\n      width: 560,\n      closeOnSubmit: false,\n      submitOnChange: true,\n      height: 'auto'\n    });\n  }\n\n  getData() {\n    const uses = this.item.system.uses || {};\n    const overrides = this.object;\n    if (overrides.system?.attackBonus) {\n      overrides.system = foundry.utils.mergeObject(overrides.system, {['attack.bonus']: overrides.system.attackBonus});\n    }\n    const ret = {\n      hasAttack: this.itemSpellItem.hasAttack,\n      hasSave: this.itemSpellItem.hasSave,\n      save: this.itemSpellItem.system.save,\n      overrides,\n      config: {\n        limitedUsePeriods: CONFIG.DND5E.limitedUsePeriods,\n        abilities: CONFIG.DND5E.abilities,\n        spellLevels: CONFIG.DND5E.spellLevels,\n        // Temporary custom object to use selectOptions until DnD5e gets v12 compliant\n        saveScaling: {\n          \"spell\": { label: \"DND5E.Spellcasting\" },\n          ...CONFIG.DND5E.abilities,\n          \"flat\": { label: \"DND5E.Flat\" }\n        }\n      },\n      isFlatDC: overrides?.system?.save?.scaling === 'flat',\n      spell: this.itemSpellItem,\n      parentItem: {\n        id: this.item.id,\n        name: this.item.name,\n        isEmbedded: this.item.isEmbedded,\n        hasUses: this.item.hasLimitedUses && (uses.per in CONFIG.DND5E.limitedUsePeriods) && (uses.max > 0)\n      }\n    };\n    return ret;\n  }\n\n  async _updateObject(event, formData) {\n    const formDataExpanded = foundry.utils.expandObject(formData);\n    this.object = formDataExpanded.overrides;\n    if (event instanceof SubmitEvent) {\n      // Button pressed to save and close the form\n      await this.itemWithSpellsItem.updateItemSpellOverrides(this.itemSpellId, this.object);\n      this.close();\n    } else {\n      // Update the form to reflect the change\n      this.render();\n    }\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\nimport {ItemsWithSpells5eItemSheet} from './item-sheet.js';\n\n/**\n * Creates a fake temporary item as filler for when a UUID is unable to resolve an item\n * @param {string} uuid - the `uuid` of the source of this item\n * @returns item with the correct flags to allow deletion\n */\nconst FakeEmptySpell = (uuid, parent) =>\n  new Item.implementation(\n    {\n      name: game.i18n.localize(\"IWS.MISSING_ITEM.Name\"),\n      img: 'icons/svg/hazard.svg',\n      type: 'spell',\n      system: {\n        description: {\n          value: game.i18n.localize(\"IWS.MISSING_ITEM.Name.Description\"),\n        }\n      },\n      _id: uuid.split('.').pop()\n    },\n    {\n      temporary: true,\n      parent\n    }\n  );\n\n/**\n * A class made to make managing the operations for an Item with spells attached easier.\n */\nexport class ItemsWithSpells5eItem {\n  constructor(item) {\n    this.item = item;\n\n    this._itemSpellFlagMap = null;\n    this._itemSpellItems = null;\n  }\n\n  /**\n   * A map of what the \"id\" of the new spell would be to its corresponding flag definition on this parent item\n   * Used when updating an item's overrides as the map lookup is easier than the array lookup\n   */\n  get itemSpellFlagMap() {\n    if (this._itemSpellFlagMap === null) {\n      return this._getItemSpellFlagMap();\n    }\n\n    return this._itemSpellFlagMap;\n  }\n\n  /**\n   * Raw flag data\n   */\n  get itemSpellList() {\n    return this.item.getFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells) ?? [];\n  }\n\n  /**\n   * A map of what the \"id\" of the New spell would be to its corresponding Item Data, taking any defined overrides into account.\n   */\n  get itemSpellItemMap() {\n    if (this._itemSpellItems === null) {\n      return this._getItemSpellItems();\n    }\n\n    return this._itemSpellItems;\n  }\n\n  /**\n   * Update this class's understanding of the item spells\n   */\n  async refresh() {\n    this._getItemSpellFlagMap();\n    await this._getItemSpellItems();\n  }\n\n  /**\n   * Gets the child item from its uuid and provided changes.\n   * If the uuid points to an item already created on the actor: return that item.\n   * Otherwise create a temporary item, apply changes, and return that item's json.\n   */\n  async _getChildItem({uuid, changes = {}}) {\n    // original could be in a compendium or on an actor\n    let original = await fromUuid(uuid);\n\n    // return a fake 'empty' item if we could not create a childItem\n    if (!original) {\n      original = FakeEmptySpell(uuid, this.item.parent);\n    }\n\n    // this exists if the 'child' spell has been created on an actor\n    if ([this.item.id, this.item.uuid].includes(IWS.getSpellParentId(original))) {\n      return original;\n    }\n\n    // consider backward compatibility\n    if (changes.system && changes.system.attackBonus && !changes.system.attack) {\n      changes.system.attack = {\n        bonus: changes.system.attackBonus,\n        flat: true\n      }\n    } else if (changes.system && changes.system.attack?.bonus) {\n      changes.system.attack.flat = true;\n    }\n\n    // merge with the changes that always need to be applied\n    const update = foundry.utils.mergeObject(changes, this._getFlagFixObject(original));\n\n    // Save the uuid of how the spell is stored in the parentItem's flags into the temporary spell object, so that we know which is its original\n    update[`flags.${IWS.MODULE_ID}.${IWS.FLAGS.knownUuid}`] = uuid;\n\n    // backfill the 'charges' and 'target' for parent-item-charge consumption style spells\n    if (foundry.utils.getProperty(changes, 'system.consume.amount')) {\n      foundry.utils.mergeObject(update, {\n        'system.consume.type': 'charges',\n        'system.consume.target': this.item.id\n      });\n    }\n\n    const childItem = new Item.implementation(original.toObject(), {\n      temporary: true,\n      keepId: false,\n      parent: this.item.parent\n    });\n    await childItem.updateSource(update);\n\n    return childItem;\n  }\n\n  /**\n   * Get a cached copy of temporary items or create and cache those items with the changes from flags applied.\n   * @returns {Promise<Map<string, Item5e>>} - array of temporary items created from the uuids and changes attached to this item\n   */\n  async _getItemSpellItems() {\n    const itemMap = new Map();\n\n    await Promise.all(\n      this.itemSpellList.map(async ({uuid, changes}) => {\n        const childItem = await this._getChildItem({uuid, changes});\n\n        if (!childItem) return;\n\n        itemMap.set(childItem.id, childItem);\n        return childItem;\n      })\n    );\n\n    this._itemSpellItems = itemMap;\n    return itemMap;\n  }\n\n  /**\n   * Get or Create a cached map of child spell item \"ids\" to their flags\n   * Useful when updating overrides for a specific 'child spell'\n   * @returns {Map<string, object>} - Map of ids to flags\n   */\n  _getItemSpellFlagMap() {\n    const map = new Map();\n    this.itemSpellList.forEach((itemSpellFlag) => {\n      const id = itemSpellFlag.uuid.split('.').pop();\n      map.set(id, itemSpellFlag);\n    });\n    this._itemSpellFlagMap = map;\n    return map;\n  }\n\n  /**\n   * Returns an object to merge into the spells object to apply/fix flags\n   * @param {Item5e} item\n   * @returns {object}\n   */\n  _getFlagFixObject(item) {\n    const changes = {\n      [`flags.${IWS.MODULE_ID}.${IWS.FLAGS.parentItem}`]: this.item.uuid,\n      'system.preparation.mode': 'atwill'\n    };\n    const tidy5eSectionFlag = item.flags['tidy5e-sheet']?.section;\n    if (tidy5eSectionFlag) {\n      changes['flags.tidy5e-sheet.section'] = null;\n    }\n    return changes;\n  }\n\n  /**\n   * Adds a given UUID to the item's spell list\n   * @param {string} providedUuid\n   */\n  async addSpellToItem(providedUuid) {\n    // MUTATED if this is an owned item\n    let uuid = providedUuid;\n\n    if (this.item.isEmbedded) {\n      // if this item is already on an actor, we need to\n      // 0. see if the uuid is already on the actor\n      // 1. create the dropped spell on the Actor's item list\n      // 2. get the new uuid from the created spell\n      // 3. add that spell's uuid to this item's flags\n      const spell = await fromUuid(uuid);\n\n      if (!spell) {\n        ui.notifications.error('Item data for', uuid, 'not found');\n        return;\n      }\n      const changes = this._getFlagFixObject(spell);\n      const adjustedItemData = foundry.utils.mergeObject(spell.toObject(), changes);\n\n      const [newItem] = await this.item.actor.createEmbeddedDocuments('Item', [adjustedItemData]);\n      uuid = newItem.uuid;\n    }\n\n    const itemSpells = [...this.itemSpellList, {uuid}];\n\n    // this update should not re-render the item sheet because we need to wait until we refresh to do so\n    const property = `flags.${IWS.MODULE_ID}.${IWS.FLAGS.itemSpells}`;\n    await this.item.update({[property]: itemSpells}, {render: false});\n\n    await this.refresh();\n\n    // now re-render the item and actor sheets\n    this.item.render();\n    if (this.item.actor) this.item.actor.render();\n  }\n\n  /**\n   * Removes the relationship between the provided item and this item's spells\n   * @param {string} itemId - the id of the item to remove\n   * @param {Object} options\n   * @param {boolean} [options.alsoDeleteEmbeddedSpell] - Should the spell be deleted also, only for owned items\n   * @returns {Item} the updated or deleted spell after having its parent item removed, or null\n   */\n  async removeSpellFromItem(itemId, {alsoDeleteEmbeddedSpell} = {}) {\n    const itemToDelete = this.itemSpellItemMap.get(itemId);\n\n    // If owned, we are storing the actual owned spell item's uuid. Else we store the source id.\n    const uuidToRemove = this.item.isEmbedded ? itemToDelete.uuid : itemToDelete.getFlag(IWS.MODULE_ID, IWS.FLAGS.knownUuid);\n    const newItemSpells = this.itemSpellList.filter(({uuid}) => uuid !== uuidToRemove);\n\n    // update the data manager's internal store of the items it contains\n    this._itemSpellItems?.delete(itemId);\n    this._itemSpellFlagMap?.delete(itemId);\n\n    await this.item.setFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells, newItemSpells);\n\n    // Nothing more to do for unowned items.\n    if (!this.item.isEmbedded) return;\n\n    // remove the spell's `parentItem` flag\n    const spellItem = fromUuidSync(uuidToRemove);\n\n    // the other item has already been deleted, probably do nothing.\n    if (!spellItem) return;\n\n    const shouldDeleteSpell = alsoDeleteEmbeddedSpell && (await Dialog.confirm({\n      title: game.i18n.localize(\"IWS.MODULE_NAME\"),\n      content: game.i18n.localize(\"IWS.DIALOG.DeleteOrphanedSpells\")\n    }));\n\n    if (shouldDeleteSpell) return spellItem.delete();\n    else return spellItem.unsetFlag(IWS.MODULE_ID, IWS.FLAGS.parentItem);\n  }\n\n  /**\n   * Updates the given item's overrides\n   * @param {*} itemId - spell attached to this item\n   * @param {*} overrides - object describing the changes that should be applied to the spell\n   */\n  async updateItemSpellOverrides(itemId, overrides) {\n    const itemSpellFlagsToUpdate = this.itemSpellFlagMap.get(itemId);\n    itemSpellFlagsToUpdate.changes = overrides;\n    this.itemSpellFlagMap.set(itemId, itemSpellFlagsToUpdate);\n    const newItemSpellsFlagValue = [...this.itemSpellFlagMap.values()];\n\n    // this update should not re-render the item sheet because we need to wait until we refresh to do so\n    await this.item.update({[`flags.${IWS.MODULE_ID}.${IWS.FLAGS.itemSpells}`]: newItemSpellsFlagValue}, {render: false});\n\n    // update this data manager's understanding of the items it contains\n    await this.refresh();\n\n    ItemsWithSpells5eItemSheet.instances.forEach((instance) => {\n      if (instance.itemWithSpellsItem === this) instance._shouldOpenSpellsTab = true;\n    });\n\n    // now re-render the item sheets\n    this.item.render();\n  }\n\n  /**\n   * For API - Get the spells of an item\n   * @public\n   * @param {Item5e[]} item The item to get the attached spells from\n   * @param {boolean} embeddedOnly Only return the items owned by the same actor\n   * @param {Map} providedItems Only return spells included in these items (e.g. pass actor.items)\n   * @returns Map of the items or `null` if item has no spells attached.\n   * Also `null` if embeddedOnly is true and item is not owned by an actor\n   */\n  static async getItemSpells(item, embeddedOnly = false, providedItems = false) {\n    if (typeof item === \"string\") item = await fromUuid(item);\n    if (embeddedOnly && !item.isEmbedded) return null;\n    const ItemsWithSpellsItem = new ItemsWithSpells5eItem(item);\n    if (!ItemsWithSpellsItem.itemSpellList.length) return null;\n    const items = providedItems ?? embeddedOnly ? item.actor?.items : false;\n    if (embeddedOnly && !items) {\n      return null;\n    } else if (items) {\n      const spells = new Map();\n      const itemIds = [item.id ?? item._id, item.uuid];\n      items.forEach(spell => {\n        const parentId = IWS.getSpellParentId(spell);\n        if (itemIds.includes(parentId)) spells.set(spell.id, spell);\n      });\n      return spells;\n    } else {\n      return await ItemsWithSpellsItem.itemSpellItemMap;\n    }\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\nimport {ItemsWithSpells5eItemSpellOverrides} from './item-spell-overrides.js';\nimport {ItemsWithSpells5eItem} from './item.js';\n\nexport {ItemsWithSpells5eItem} // to avoid a circular dependency\n\n/**\n * A class made to make managing the operations for an Item sheet easier.\n */\nexport class ItemsWithSpells5eItemSheet {\n  /** A boolean to set when we are causing an item update we know should re-open to this tab */\n  _shouldOpenSpellsTab = false;\n\n  constructor(app, [html]) {\n    this.app = app;\n    this.item = app.item;\n    this.sheetHtml = html;\n    this.itemWithSpellsItem = new ItemsWithSpells5eItem(this.item);\n  }\n\n  /** MUTATED: All open ItemSheet have a cached instance of this class */\n  static instances = new Map();\n\n  /**\n   * Handles the item sheet render hooks.\n   */\n  static init() {\n    Hooks.on('renderItemSheet', (app, html) => {\n      // stop if item type is not included or this sheet is tidy5e\n      if ( game.modules.get('tidy5e-sheet')?.api?.isTidy5eItemSheet(app) || !IWS.isIncludedItemType(app.item.type) ) return; // don't do this for tidy5e\n\n      const instance = ItemsWithSpells5eItemSheet.instances.get(app.appId);\n      if (instance) {\n        instance.renderLite();\n        if (instance._shouldOpenSpellsTab) {\n          app._tabs?.[0]?.activate?.(IWS.MODULE_ID);\n          instance._shouldOpenSpellsTab = false;\n        }\n        return;\n      }\n      const newInstance = new ItemsWithSpells5eItemSheet(app, html);\n      ItemsWithSpells5eItemSheet.instances.set(app.appId, newInstance);\n      return newInstance.renderLite();\n    });\n\n    // clean up instances as sheets are closed\n    Hooks.on('closeItemSheet', async (app) => {\n      const instance = ItemsWithSpells5eItemSheet.instances.get(app.appId);\n      if (instance) {\n        // Unlink all contained spells\n        await instance._unlinkSpellSheets();\n        // Close this instance\n        return ItemsWithSpells5eItemSheet.instances.delete(app.appId);\n      }\n    });\n\n    // tidy5e\n    Hooks.once('tidy5e-sheet.ready', (api) => {\n      const myTab = new api.models.HtmlTab({\n        title: game.i18n.localize(\"TYPES.Item.spellPl\"),\n        tabId: IWS.MODULE_ID,\n        html: '',\n        enabled(data) {\n          return IWS.isIncludedItemType(data.item.type);\n        },\n        onRender(params) {\n          if (!IWS.isIncludedItemType(params.data.item.type)) return;\n          let app = params.app;\n          let html = [params.element];\n          const instance = ItemsWithSpells5eItemSheet.instances.get(app.appId);\n          if (instance) {\n            instance.renderHeavy(params.tabContentsElement);\n          } else {\n            const newInstance = new ItemsWithSpells5eItemSheet(app, html);\n            ItemsWithSpells5eItemSheet.instances.set(app.appId, newInstance);\n            newInstance.renderHeavy(params.tabContentsElement);\n          };\n        }\n      });\n      api.registerItemTab(myTab, { autoHeight: true });\n    });\n  }\n\n  /**\n   * Renders the spell tab template to be injected\n   */\n  async _renderSpellsList() {\n    await this.itemWithSpellsItem.refresh(); // Re-create the temporary spells every time\n    const itemSpellsArray = [...(await this.itemWithSpellsItem.itemSpellItemMap).values()];\n\n    // Link all contained spells to this one\n    await this._linkSpellSheets();\n\n    return renderTemplate(IWS.TEMPLATES.spellsTab, {\n      itemSpells: itemSpellsArray,\n      config: {\n        limitedUsePeriods: CONFIG.DND5E.limitedUsePeriods,\n        abilities: CONFIG.DND5E.abilities,\n      },\n      isEmbedded: this.item.isEmbedded,\n      isOwner: this.item.isOwner,\n      concealDetails: !game.user.isGM && (this.item.system.identified === false)\n    });\n  }\n\n  /**\n   * Ensure the item dropped is a spell, add the spell to the item flags.\n   * @returns Promise that resolves when the item has been modified\n   */\n  async _dragEnd(event) {\n    if (!this.app.isEditable) return;\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== 'Item') return;\n    const item = await fromUuid(data.uuid);\n    if (item.type !== 'spell') return;\n    // set the flag to re-open this tab when the update completes\n    this._shouldOpenSpellsTab = true;\n    return this.itemWithSpellsItem.addSpellToItem(data.uuid);\n  }\n\n  /**\n   * Event Handler that opens the item's sheet\n   */\n  async _handleItemClick(event) {\n    const spellId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    const spell = this.itemWithSpellsItem.itemSpellItemMap.get(spellId);\n    if (this.item.isEmbedded) {\n      fromUuidSync(spell.uuid).use({ event });\n    } else {\n      spell?.sheet.render(true, {editable: false});\n    }\n  }\n\n  /**\n   * Event Handler that opens the item's sheet to edit\n   */\n  async _handleItemEditClick(event) {\n    const spellId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    const spellTemp = this.itemWithSpellsItem.itemSpellItemMap.get(spellId);\n    let spell = spellTemp;\n    if (!spellTemp.isEmbedded) {\n      const spellUuid = spellTemp.getFlag(IWS.MODULE_ID, IWS.FLAGS.knownUuid);\n      spell = await fromUuid(spellUuid); // could be from a compendium\n    }\n    spell?.sheet.render(true);\n  }\n\n  /**\n   * Event Handler that removes the link between this item and the spell\n   */\n  async _handleItemDeleteClick(event) {\n    const itemId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    // set the flag to re-open this tab when the update completes\n    this._shouldOpenSpellsTab = true;\n    return this.itemWithSpellsItem.removeSpellFromItem(itemId);\n  }\n\n  /**\n   * Event Handler that also Deletes the embedded spell\n   */\n  async _handleItemDestroyClick(event) {\n    const itemId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    // set the flag to re-open this tab when the update completes\n    this._shouldOpenSpellsTab = true;\n    return this.itemWithSpellsItem.removeSpellFromItem(itemId, {alsoDeleteEmbeddedSpell: true});\n  }\n\n  /**\n   * Event Handler that opens the spell's sheet or config overrides, depending on if the item is owned\n   */\n  async _handleOverridesConfigureClick(event) {\n    const spellId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    const spell = this.itemWithSpellsItem.itemSpellItemMap.get(spellId);\n    if (this.item.isEmbedded) {\n      // NOG AANPASSEN: zodat overrides ook op embedded spells kunnen worden toegepast\n      return fromUuidSync(spell.uuid).sheet.render(true);\n    } else if (spell.sheet.rendered) {\n      // For temporary items, close any open sheet as the configure will create a new temporary item\n      spell.sheet.close();\n    }\n    // pop up a form dialog to configure this item's overrides\n    return new ItemsWithSpells5eItemSpellOverrides(this.itemWithSpellsItem, spellId).render(true);\n  }\n\n  /**\n   * Synchronous part of the render which calls the asynchronous `renderHeavy`\n   * This allows for less delay during the update -> renderItemSheet -> set tab cycle\n   */\n  renderLite() {\n    // Update the nav menu\n    const div = document.createElement(\"DIV\");\n    div.innerHTML = `<a class=\"item\" data-tab=\"${IWS.MODULE_ID}\">${game.i18n.localize(\"TYPES.Item.spellPl\")}</a>`;\n    const tabs = this.sheetHtml.querySelector(\".tabs[data-group=primary]\");\n    if (!tabs) return;\n    tabs.appendChild(div.firstElementChild);\n\n    // Create the tab\n    const sheetBody = this.sheetHtml.querySelector(\".sheet-body\");\n    div.innerHTML = `<div class=\"tab ${IWS.MODULE_ID}\" data-group=\"primary\" data-tab=\"${IWS.MODULE_ID}\"></div>`;\n    const c = div.firstElementChild;\n    sheetBody.appendChild(c);\n    this.renderHeavy(c);\n  }\n\n  /**\n   * Heavy lifting part of the spells tab rendering which involves getting the spells and painting them.\n   * @param {HTMLElement} spellsTab\n   */\n  async renderHeavy(spellsTab) {\n    // Add the list to the tab\n    const div = document.createElement(\"DIV\");\n    div.innerHTML = await this._renderSpellsList();\n    const c = div.firstElementChild;\n    spellsTab.appendChild(c);\n\n    // Activate Listeners for this ui.\n    c.querySelectorAll(\".item-name\").forEach(n => n.addEventListener(\"click\", this._handleItemClick.bind(this)));\n    c.querySelectorAll(\".configure-overrides\").forEach(n => n.addEventListener(\"click\", this._handleOverridesConfigureClick.bind(this)));\n    c.querySelectorAll(\".item-edit\").forEach(n => n.addEventListener(\"click\", this._handleItemEditClick.bind(this)));\n    c.querySelectorAll(\".item-delete\").forEach(n => n.addEventListener(\"click\", this._handleItemDeleteClick.bind(this)));\n    c.querySelectorAll(\".item-destroy\").forEach(n => n.addEventListener(\"click\", this._handleItemDestroyClick.bind(this)));\n\n    // Register a DragDrop handler for adding new spells to this item\n    const dragDrop = {\n      dragSelector: \".item\",\n      dropSelector: `.${IWS.MODULE_ID}`,\n      permissions: {drop: () => this.app.isEditable && !this.item.isEmbedded},\n      callbacks: {drop: this._dragEnd},\n    };\n    spellsTab.addEventListener(\"drop\", dragDrop.callbacks.drop.bind(this));\n  }\n\n  /**\n   * Link the sheets of linked spells so that updating them updates this item sheet as well\n   */\n  async _linkSpellSheets() {\n    return Promise.all(\n      this.itemWithSpellsItem.itemSpellList.map(async ({uuid, overrides}) => {\n        const spell = await fromUuid(uuid);\n        if (spell) spell.apps[this.app.appId] = this.app;\n        return spell;\n      })\n    );\n  }\n\n  /**\n   * Link the sheets of linked spells so that updating them updates this item sheet as well\n   */\n  async _unlinkSpellSheets() {\n    return Promise.all(\n      this.itemWithSpellsItem.itemSpellList.map(async ({uuid, overrides}) => {\n        const spell = await fromUuid(uuid);\n        if (spell.apps[this.app.appId]) delete spell.apps[this.app.appId];\n        return spell;\n      })\n    );\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n// the item types that can NEVER have spells in them.\nexport const EXCLUDED_TYPES = [\n  \"class\",\n  \"subclass\",\n  \"background\",\n  \"race\",\n  \"lineage\",\n  \"spell\",\n  \"base\",\n  \"container\",\n  \"backpack\"\n];\n\nexport function _registerSettings() {\n  const TYPES = Item.TYPES.filter(t => !EXCLUDED_TYPES.includes(t));\n\n  for (const type of TYPES) {\n    game.settings.register(IWS.MODULE_ID, `isIncludedItemType${type.titleCase()}`, {\n      scope: \"world\",\n      config: false,\n      type: Boolean,\n      default: true,\n      requiresReload: true\n    });\n  }\n\n  game.settings.register(IWS.MODULE_ID, \"sortOrder\", {\n    name: \"IWS.SETTINGS.SORT_ORDER.NAME\",\n    hint: \"IWS.SETTINGS.SORT_ORDER.HINT\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: false,\n    requiresReload: false\n  });\n\n  game.settings.registerMenu(IWS.MODULE_ID, \"itemTypeExclusion\", {\n    name: \"IWS.SETTINGS.ITEM_EXCLUSION.NAME\",\n    hint: \"IWS.SETTINGS.ITEM_EXCLUSION.HINT\",\n    scope: \"world\",\n    config: true,\n    type: IWS_TypeSettings,\n    label: \"IWS.SETTINGS.ITEM_EXCLUSION.NAME\",\n    restricted: true\n  });\n\n  game.settings.register(IWS.MODULE_ID, \"excludeUnequipped\", {\n    name: \"IWS.SETTINGS.EXCLUDE_UNEQUIPPED.NAME\",\n    hint: \"IWS.SETTINGS.EXCLUDE_UNEQUIPPED.HINT\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: true,\n    requiresReload: false\n  });\n}\n\nclass IWS_TypeSettings extends FormApplication {\n\n  get id() {\n    return `${IWS.MODULE_ID}-item-type-exclusion-menu`;\n  }\n\n  get title() {\n    return game.i18n.localize(\"IWS.SETTINGS.ITEM_EXCLUSION.TITLE\");\n  }\n\n  get template() {\n    return \"modules/items-with-spells-5e/templates/settingsMenu.hbs\";\n  }\n\n  async getData() {\n    const TYPES = Item.TYPES.filter(t => !EXCLUDED_TYPES.includes(t));\n    const data = await super.getData();\n    data.types = [];\n    for (const type of TYPES) {\n      data.types.push({\n        checked: game.settings.get(IWS.MODULE_ID, `isIncludedItemType${label}`),\n        value: type,\n        label: game.i18n.localize(`TYPES.Item.${type}`)\n      });\n    }\n    return data.sort((a,b) => (a.label > b.label) ? 1 : (a.label < b.label) ? -1 : 0);\n  }\n\n  async _updateObject(event, formData) {\n    Object.entries(formData).forEach(([type, bool]) => {\n      game.settings.set(IWS.MODULE_ID, `isIncludedItemType${type.titleCase()}`, bool);\n    });\n  }\n}\n","import {ItemsWithSpells5e as IWS} from '../classes/defaults.js';\nimport {ItemsWithSpells5eItem as IWSitem} from '../classes/item.js';\nimport {EXCLUDED_TYPES} from '../classes/settings.mjs';\n\nlet ItemsWithSpellsActionHandlerExtender = null\n\nexport class ItemsWithSpells5eExtendHUD {\n  static init() {\n    // only if both TAH Core and DnD5e modules are installed and active\n    if (!game.modules.get('token-action-hud-core')?.active || !game.modules.get('token-action-hud-dnd5e')?.active || !foundry.utils.isNewerVersion(game.modules.get('token-action-hud-dnd5e')?.version, '1.5.6')) return\n\n    // Create the parent group\n    Hooks.once(\"tokenActionHudCoreRegisterDefaults\", async (defaults) => {\n      const name = \"Items with Spells\"\n      const spellsLayout = defaults.layout.find(obj => obj.id === 'spells')\n      const newGroup = {\n        id: IWS.MODULE_ID,\n        name,\n        listName: `Group: ${name}`,\n        type: 'system',\n        nestId: `spells_${IWS.MODULE_ID}`\n      }\n      // Add the group\n      defaults.groups.push(newGroup)\n      // Make it visible at the top of the Spells tab by default\n      spellsLayout.groups.unshift(newGroup)\n    })\n\n    // Extend the class for making a sub-group per item and adding their spells to it\n    Hooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\n      ItemsWithSpellsActionHandlerExtender = class ItemsWithSpellsActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\n\n        constructor(actionHandler) {\n          super();\n          this.actionHandler = actionHandler\n          this.actor = null\n          this.iwsExcludeUnequipped = null\n        }\n\n        /**\n         * Extend the action list\n         * @override\n         */\n        async extendActionHandler () {\n          this.actor = this.actionHandler.actor\n          if (!this.actor) return\n\n          this.iwsExcludeUnequipped = game.settings.get(IWS.MODULE_ID, \"excludeUnequipped\")\n\n          const parentGroupData = {\n              id: IWS.MODULE_ID,\n              type: 'system'\n          }\n\n          // iterate over all the items of this actor\n          for (const [key, item] of this.actor.items.entries()) {\n\n            // skip excluded item types\n            if ( EXCLUDED_TYPES.includes(item.type) ) continue\n\n            // skip if item's spells aren't usable\n            const itemUsable = IWS.isUsableItem(item)\n            if ( !itemUsable ) continue\n\n            // get spells of item\n            const actionData = await IWSitem.getItemSpells(item, true, this.actor.items)\n            if ( !actionData ) continue\n\n            // Create a group for this item\n            const info1 = {}\n            const uses = item?.system?.uses\n            if (uses?.per && (uses.value > 0 || uses.max > 0)) {\n              const per = coreModule.api.Utils.i18n('DND5E.per')\n              const period = CONFIG.DND5E.limitedUsePeriods[uses.per]?.label ?? uses.per\n              const perPeriod = uses.per === 'charges' ? period : `${per} ${period}`\n              info1.text = `${uses.value ?? '0'}${uses.max > 0 ? `/${uses.max}` : ''}`\n              info1.title = `${item.name}: ${info1.text} ${perPeriod}`\n            }\n            const groupData = {\n                id: `${IWS.MODULE_ID}_${item.id}`,\n                name: item.name,\n                type: 'system-derived',\n                info1,\n                defaultSelected: true,\n                settings: { sort: true }\n            }\n\n            // Add group to HUD\n            this.actionHandler.addGroup(groupData, parentGroupData)\n\n            // Add actions to the group, using the TAH DnD5e Build Actions\n            const actionType = 'spell'\n            const data = { groupData, actionData, actionType }\n            await this.actionHandler.buildActions(data)\n          }\n        }\n      }\n    })\n\n    // Add the new class to TAH workflow\n    Hooks.once(\"tokenActionHudCoreAddActionHandlerExtenders\", async (actionHandler) => {\n      actionHandler.addActionHandlerExtender(new ItemsWithSpellsActionHandlerExtender(actionHandler))\n    })\n\n  }\n}\n","\nimport {ItemsWithSpells5e} from './classes/defaults.js';\nimport {ItemsWithSpells5eActorSheet} from './classes/actor-sheet.js';\nimport {ItemsWithSpells5eActor} from './classes/actor.js';\nimport {ItemsWithSpells5eItem} from './classes/item-sheet.js';\nimport {ItemsWithSpells5eItemSheet} from './classes/item-sheet.js';\nimport {_registerSettings} from './classes/settings.mjs';\nimport {ItemsWithSpells5eExtendHUD} from './extensions/token-action-hud-dnd5e.js';\n\nHooks.once(\"setup\", _registerSettings);\nHooks.once(\"init\", ItemsWithSpells5eActor.init);\nHooks.once(\"init\", ItemsWithSpells5eActorSheet.init);\nHooks.once(\"init\", ItemsWithSpells5e.init);\nHooks.once(\"init\", ItemsWithSpells5eItemSheet.init);\nHooks.once(\"init\", ItemsWithSpells5eExtendHUD.init);\nHooks.once(\"ready\", async () => {\n  const module = game.modules.get(ItemsWithSpells5e.MODULE_ID);\n  module.api = {\n    isIwsItem: ItemsWithSpells5e.isIwsItem,\n    isIwsSpell: ItemsWithSpells5e.getSpellParentId,\n    getItemSpells: ItemsWithSpells5eItem.getItemSpells,\n    getSpellParentId: ItemsWithSpells5e.getSpellParentId,\n    getSpellParentItem: ItemsWithSpells5e.getSpellParentItem,\n    isIncludedItemType: ItemsWithSpells5e.isIncludedItemType,\n    isUsableItem: ItemsWithSpells5e.isUsableItem\n  }\n});"],"names":["ItemsWithSpells5e","static","itemSpells","parentItem","knownUuid","spellsTab","MODULE_ID","overrides","init","preloadTemplates","dnd5e","utils","registerHandlebarsHelpers","loadTemplates","TEMPLATES","isIwsItem","item","fromUuidSync","getFlag","FLAGS","length","getSpellParentId","spell","getSpellParentItem","embeddedOnly","providedItems","fromUuid","isEmbedded","parentId","items","actor","parentIdLast","split","pop","get","isIncludedItemType","itemType","include","game","settings","titleCase","isUsableItem","system","identified","equipped","user","isGM","foundry","isNewerVersion","version","attunement","attuned","attunementRequired","CONFIG","DND5E","attunementTypes","REQUIRED","ItemsWithSpells5eActorSheet","id","IWS","fn","prepareItemSpellbook","forEach","a","libWrapper","register","wrapped","data","spells","order","nonItemSpells","spellsPerItem","Map","this","some","uuid","includes","set","push","spellbook","filter","fl","type","iws","iwsSpells","section","uses","label","name","usesSlots","canCreate","canPrepare","value","slots","max","override","dataset","prop","createSection","sort","b","ItemsWithSpells5eActor","Hooks","on","handleCreateItem","handleDeleteItem","itemDeleted","options","userId","parent","Actor","spellIds","reduce","acc","flag","optionOverride","itemsWithSpells5e","alsoDeleteChildSpells","autoConfirm","Dialog","confirm","title","i18n","localize","content","deleteEmbeddedDocuments","itemCreated","spellUuids","Promise","all","map","d","_createSpellData","overridesData","spellData","s","idx","changes","ids","createEmbeddedDocuments","setFlag","attackBonus","attack","bonus","flat","usesMax","rollData","getRollData","deterministic","simplifyBonus","consume","amount","target","fromCompendium","mergeData","tidy5eSectionFlag","flags","mergeObject","ItemsWithSpells5eItemSpellOverrides","FormApplication","constructor","itemWithSpellsItem","itemSpellId","itemSpellFlagData","itemSpellFlagMap","super","itemSpellItem","itemSpellItemMap","defaultOptions","classes","template","width","closeOnSubmit","submitOnChange","height","getData","object","hasAttack","hasSave","save","config","limitedUsePeriods","abilities","spellLevels","saveScaling","isFlatDC","scaling","hasUses","hasLimitedUses","per","_updateObject","event","formData","formDataExpanded","expandObject","SubmitEvent","updateItemSpellOverrides","close","render","ItemsWithSpells5eItem","_itemSpellFlagMap","_itemSpellItems","_getItemSpellFlagMap","itemSpellList","_getItemSpellItems","refresh","_getChildItem","original","Item","implementation","img","description","_id","temporary","FakeEmptySpell","update","_getFlagFixObject","getProperty","childItem","toObject","keepId","updateSource","itemMap","async","itemSpellFlag","addSpellToItem","providedUuid","ui","notifications","error","adjustedItemData","newItem","property","removeSpellFromItem","itemId","alsoDeleteEmbeddedSpell","itemToDelete","uuidToRemove","newItemSpells","delete","spellItem","unsetFlag","itemSpellFlagsToUpdate","newItemSpellsFlagValue","values","ItemsWithSpells5eItemSheet","instances","instance","_shouldOpenSpellsTab","getItemSpells","ItemsWithSpellsItem","itemIds","app","html","sheetHtml","modules","api","isTidy5eItemSheet","appId","renderLite","_tabs","activate","newInstance","_unlinkSpellSheets","once","myTab","models","HtmlTab","tabId","enabled","onRender","params","element","renderHeavy","tabContentsElement","registerItemTab","autoHeight","_renderSpellsList","itemSpellsArray","_linkSpellSheets","renderTemplate","isOwner","concealDetails","_dragEnd","isEditable","TextEditor","getDragEventData","_handleItemClick","spellId","currentTarget","closest","use","sheet","editable","_handleItemEditClick","spellTemp","spellUuid","_handleItemDeleteClick","_handleItemDestroyClick","_handleOverridesConfigureClick","rendered","div","document","createElement","innerHTML","tabs","querySelector","appendChild","firstElementChild","sheetBody","c","querySelectorAll","n","addEventListener","bind","dragDrop","dragSelector","dropSelector","permissions","drop","callbacks","apps","EXCLUDED_TYPES","IWS_TypeSettings","TYPES","t","types","checked","Object","entries","bool","ItemsWithSpellsActionHandlerExtender","ItemsWithSpells5eExtendHUD","active","defaults","spellsLayout","layout","find","obj","newGroup","listName","nestId","groups","unshift","coreModule","ActionHandlerExtender","actionHandler","iwsExcludeUnequipped","extendActionHandler","parentGroupData","key","actionData","IWSitem","info1","Utils","period","perPeriod","text","groupData","defaultSelected","addGroup","actionType","buildActions","addActionHandlerExtender","_registerSettings","scope","Boolean","default","requiresReload","hint","registerMenu","restricted","isIwsSpell"],"mappings":"AAAO,MAAMA,kBACXC,iBAAmB,uBACnBA,gBAAkB,CAAA,EAClBA,aAAe,CACbC,WAAY,cACZC,WAAY,cACZC,UAAW,iBAEbH,iBAAmB,CACjBI,UAAW,WAAWL,kBAAkBM,qCACxCC,UAAW,WAAWP,kBAAkBM,0CAG1C,WAAOE,GACLR,kBAAkBS,kBACnB,CAED,uBAAOA,GACLC,MAAMC,MAAMC,4BACZC,cAAcb,kBAAkBc,UACjC,CAQD,gBAAOC,CAAUC,GACK,iBAATA,IAAmBA,EAAOC,aAAaD,IAClD,MAAMd,EAAac,GAAME,QAAQlB,kBAAkBM,UAAWN,kBAAkBmB,MAAMjB,aAAe,GACrG,OAAOA,EAAWkB,OAASlB,EAAa,IACzC,CASD,uBAAOmB,CAAiBC,GAEtB,MADqB,iBAAVA,IAAoBA,EAAQL,aAAaK,IAC7CA,EAAMJ,QAAQlB,kBAAkBM,UAAWN,kBAAkBmB,MAAMhB,aAAe,IAC1F,CAUD,+BAAaoB,CAAmBD,EAAOE,GAAe,EAAOC,GAAgB,GAE3E,GADqB,iBAAVH,IAAoBA,QAAcI,SAASJ,IAClDE,IAAiBF,EAAMK,WAAY,OAAO,KAC9C,MAAMC,EAAW5B,kBAAkBqB,iBAAiBC,GACpD,IAAKM,EAAU,OAAO,KACtB,MAAMC,EAAQJ,GAAiBH,EAAMQ,OAAOD,QAAS,EACrD,GAAIL,IAAiBK,EACnB,OAAO,KACF,GAAIA,EAAO,CAChB,MAAME,EAAeH,EAASI,MAAM,KAAKC,MACzC,OAAOJ,EAAMK,IAAIH,IAAiB,IACxC,CACM,aAAaL,SAASE,EAEzB,CAQD,yBAAOO,CAAmBC,GACxB,IAAIC,GAAU,EACd,IACEA,IAAYC,KAAKC,SAASL,IACxBlC,kBAAkBM,UAClB,qBAAqB8B,EAASI,cAEjC,CAAC,MAAQ,CACV,OAAOH,CACR,CAQD,mBAAOI,CAAazB,GAGlB,GAFoB,iBAATA,IAAmBA,EAAOC,aAAaD,KAElB,IAA5BA,EAAK0B,QAAQC,WAAsB,OAAO,EAG9C,GAD6BL,KAAKC,SAASL,IAAIlC,kBAAkBM,UAAW,uBACvB,IAAzBU,EAAK0B,OAAOE,SAAoB,OAAO,EAEnE,IAAKN,KAAKO,KAAKC,KACb,GAAIC,QAAQpC,MAAMqC,eAAeV,KAAKI,OAAOO,QAAS,UAAW,CAE/D,GADuD,aAA5BjC,EAAK0B,QAAQQ,aACblC,EAAK0B,QAAQS,QAAS,OAAO,CAChE,KAAa,CACL,MAAMC,EAAqBC,OAAOC,MAAMC,iBAAiBC,UAAY,EACrE,GAAIxC,EAAK0B,QAAQQ,aAAeE,EAAoB,OAAO,CAC5D,CAEH,OAAO,CACR,EC5GI,MAAMK,4BAEX,WAAOjD,GACL,MAAMkD,EAAKC,kBAAIrD,UACTsD,EAAKH,4BAA4BI,qBACvC,CAAC,YAAa,OAAOC,SAAQC,IAC3BC,WAAWC,SAASP,EAAI,wCAAwCK,gCAAiCH,EAAI,UAAU,GAElH,CASD,2BAAOC,CAAqBK,EAASC,EAAMC,GACzC,MAAMC,EAAQ/B,KAAKC,SAASL,IAAIyB,kBAAIrD,UAAW,aAAe,IAAM,EAkB9DgE,EAAgB,GAChBC,EAAgB,IAAIC,IAC1BJ,EAAON,SAASxC,IACd,MAAMM,EAAW+B,kBAAItC,iBAAiBC,GACtC,GAAKM,GAAY6C,KAAK3C,MAAMD,MAAM6C,MAAK1D,GAAQ,CAACA,EAAK0C,GAAI1C,EAAK2D,MAAMC,SAAShD,KAAa,CACxF,MAAMG,EAAeH,EAASI,MAAM,KAAKC,MACpCsC,EAAcrC,IAAIH,IAAewC,EAAcM,IAAI9C,EAAc,IACtEwC,EAAcrC,IAAIH,GAAc+C,KAAKxD,EAC7C,MACQgD,EAAcQ,KAAKxD,EACpB,IAGH,MAAMyD,EAAYb,EAAQC,EAAMG,GAqBhC,OAlBwBG,KAAK3C,MAAMD,MAAMmD,QAAOhE,IAC9C,MAAMiE,EAAKjE,EAAKE,QAAQyC,kBAAIrD,UAAWqD,kBAAIxC,MAAMjB,aAAakB,OAC9D,IAAK6D,EAAI,OAAO,EAEhB,OADgBtB,kBAAIxB,mBAAmBnB,EAAKkE,KAC9B,IAIApB,SAASqB,IACvB,MAAMC,EAAYb,EAAcrC,IAAIiD,EAAIzB,IACxC,IAAK0B,EAAW,OAEhB,IADkBzB,kBAAIlB,aAAa0C,GACnB,OAChB,MAAME,EA9Cc,EAACF,EAAKG,EAAO,CAAE,EAAElB,EAAS,MACvC,CACLC,MAAOA,EACPkB,MAAOJ,EAAIK,KACXC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZvB,SACAkB,KAAMA,EAAKM,OAAS,IACpBC,MAAOP,EAAKQ,KAAO,IACnBC,SAAU,EACVC,QAAS,CAAC,cAAeb,EAAIzB,IAC7BuC,KAAM,QAAQd,EAAIzB,KAkCJwC,CAAcf,EAAKA,EAAIzC,OAAO4C,KAAMF,GACpDL,EAAUD,KAAKO,EAAQ,IAGzBN,EAAUoB,MAAK,CAACpC,EAAGqC,IAAOrC,EAAEM,MAAQ+B,EAAE/B,OAAWN,EAAEwB,MAAQa,EAAEb,QACtDR,CACR,ECrEI,MAAMsB,uBAEX,WAAO7F,GACL8F,MAAMC,GAAG,aAAcF,uBAAuBG,kBAC9CF,MAAMC,GAAG,aAAcF,uBAAuBI,iBAC/C,CASD,6BAAaA,CAAiBC,EAAaC,EAASC,GAClD,GAAIA,IAAWtE,KAAKO,KAAKa,GAAI,OAC7B,KAAMgD,EAAYG,kBAAkBC,OAAQ,OAC5C,GAAI,CAAC,QAAS,WAAWlC,SAAS8B,EAAYG,OAAO3B,MAAO,OAG5D,IADYvB,kBAAI5C,UAAU2F,GAChB,OAEV,MAAMK,EAAWL,EAAY5E,MAAMD,MAAMmF,QAAO,CAACC,EAAKjG,KACpD,MAAMkG,EAAOvD,kBAAItC,iBAAiBL,GAElC,MADI,CAAC0F,EAAYhD,GAAIgD,EAAY/B,MAAMC,SAASsC,IAAOD,EAAInC,KAAK9D,EAAK0C,IAC9DuD,CAAG,GACT,IAEH,IAAKF,EAAS3F,OAAQ,OAGtB,MAAM+F,EAAiBR,EAAQS,mBAAmBC,sBAC5CC,GAAehF,KAAKO,KAAKC,OAA2C,IAAnC4D,EAAYhE,QAAQC,WAK3D,SAJgBwE,GAAkBG,UAA2BC,OAAOC,QAAQ,CAC1EC,MAAOnF,KAAKoF,KAAKC,SAAS,mBAC1BC,QAAStF,KAAKoF,KAAKC,SAAS,gCAEVjB,EAAY5E,MAAM+F,wBAAwB,OAAQd,QAAtE,CACD,CAWD,6BAAaP,CAAiBsB,EAAanB,EAASC,GAClD,GAAIA,IAAWtE,KAAKO,KAAKa,GAAI,OAC7B,KAAMoE,EAAYjB,kBAAkBC,OAAQ,OAC5C,GAAI,CAAC,QAAS,WAAWlC,SAASkD,EAAYjB,OAAO3B,MAAO,OAI5D,IADgBvB,kBAAIxB,mBAAmB2F,EAAY5C,MACrC,OAGd,MAAM6C,EAAapE,kBAAI5C,UAAU+G,GACjC,IAAKC,EAAY,OAGjB,MAAM3D,QAAe4D,QAAQC,IAAIF,EAAWG,KAAIC,GAAK9B,uBAAuB+B,iBAAiBN,EAAaK,MAGpGE,EAAgB,GAChBC,EAAYlE,EAAOY,QAAO,CAACuD,EAAGC,MAAQD,GAAIF,EAAcvD,KAAKiD,EAAWS,IAAMC,WAM9EC,SAHsBZ,EAAYhG,MAAM6G,wBAAwB,OAAQL,IAGpDJ,KAAI,CAACK,EAAGC,KAAG,CAAO7D,KAAM4D,EAAE5D,KAAMjB,GAAI6E,EAAE7E,GAAI+E,QAASJ,EAAcG,OAC3F,OAAOV,EAAYc,QAAQjF,kBAAIrD,UAAWqD,kBAAIxC,MAAMjB,WAAYwI,EACjE,CAQD,6BAAaN,CAAiBjI,EAAYgE,GACxC,MAAM7C,QAAcI,SAASyC,EAAKQ,MAClC,IAAKrD,EAAO,OAAO,KAGnB,MAAMmH,EAAUtE,EAAKsE,SAAS/F,QAAU,CAAA,EACpC+F,EAAQI,cAAgBJ,EAAQK,OAClCL,EAAQK,OAAS,CACfC,MAAON,EAAQI,YACfG,MAAM,GAECP,EAAQK,QAAQC,QACzBN,EAAQK,OAAOE,MAAO,GAIxB,MAAMC,EAAUR,EAAQnD,MAAMQ,IAC9B,GAAImD,EAAS,CACX,MAAMC,EAAW/I,EAAWgJ,YAAY,CAACC,eAAe,IACxDX,EAAQnD,KAAKM,MAAQlF,MAAMC,MAAM0I,cAAcJ,EAASC,EACzD,CAGGT,EAAQa,SAASC,SACnBd,EAAQa,QAAQpE,KAAO,UACvBuD,EAAQa,QAAQE,OAASrJ,EAAWuD,IAItC,MAAM4E,EAAYhG,KAAKT,MAAM4H,eAAenI,GACtCoI,EAAY,CAChB,CAAC,SAAS/F,kBAAIrD,aAAaqD,kBAAIxC,MAAMhB,cAAeA,EAAWuD,GAC/DhB,OAAQ,IAAI+F,EAAS,mBAAoB,WAErCkB,EAAoBrI,EAAMsI,MAAM,iBAAiBvE,QAIvD,OAHIsE,IACFD,EAAU,8BAAgC,MAErC3G,QAAQpC,MAAMkJ,YAAYvB,EAAWoB,EAC7C,EC1HI,MAAMI,4CAA4CC,gBACvD,WAAAC,CAAYC,EAAoBC,GAC9B,MAAMC,EAAoBF,EAAmBG,iBAAiBlI,IAAIgI,GAElEG,MAAMF,GAAmB1B,SAAW,CAAA,GAGpChE,KAAKyF,YAAcA,EAGnBzF,KAAKwF,mBAAqBA,EAG1BxF,KAAKzD,KAAOiJ,EAAmBjJ,KAG/ByD,KAAK6F,cAAgBL,EAAmBM,iBAAiBrI,IAAIgI,EAC9D,CAED,MAAIxG,GACF,MAAO,GAAGC,kBAAIrD,aAAamE,KAAKzD,KAAK0C,MAAMe,KAAK6F,cAAc5G,IAC/D,CAED,SAAI+D,GACF,MAAO,GAAGhD,KAAKzD,KAAKwE,UAAUf,KAAK6F,cAAc9E,MAClD,CAED,yBAAWgF,GACT,OAAOzH,QAAQpC,MAAMkJ,YAAYQ,MAAMG,eAAgB,CACrDC,QAAS,CAAC,QAAS,QAAS,OAAQ,OACpCC,SAAU/G,kBAAI7C,UAAUP,UACxBoK,MAAO,IACPC,eAAe,EACfC,gBAAgB,EAChBC,OAAQ,QAEX,CAED,OAAAC,GACE,MAAMzF,EAAOb,KAAKzD,KAAK0B,OAAO4C,MAAQ,CAAA,EAChC/E,EAAYkE,KAAKuG,OACnBzK,EAAUmC,QAAQmG,cACpBtI,EAAUmC,OAASK,QAAQpC,MAAMkJ,YAAYtJ,EAAUmC,OAAQ,CAAC,eAAkBnC,EAAUmC,OAAOmG,eA2BrG,MAzBY,CACVoC,UAAWxG,KAAK6F,cAAcW,UAC9BC,QAASzG,KAAK6F,cAAcY,QAC5BC,KAAM1G,KAAK6F,cAAc5H,OAAOyI,KAChC5K,YACA6K,OAAQ,CACNC,kBAAmBhI,OAAOC,MAAM+H,kBAChCC,UAAWjI,OAAOC,MAAMgI,UACxBC,YAAalI,OAAOC,MAAMiI,YAE1BC,YAAa,CACXlK,MAAS,CAAEiE,MAAO,yBACflC,OAAOC,MAAMgI,UAChBtC,KAAQ,CAAEzD,MAAO,gBAGrBkG,SAA+C,SAArClL,GAAWmC,QAAQyI,MAAMO,QACnCpK,MAAOmD,KAAK6F,cACZnK,WAAY,CACVuD,GAAIe,KAAKzD,KAAK0C,GACd8B,KAAMf,KAAKzD,KAAKwE,KAChB7D,WAAY8C,KAAKzD,KAAKW,WACtBgK,QAASlH,KAAKzD,KAAK4K,gBAAmBtG,EAAKuG,OAAOxI,OAAOC,MAAM+H,mBAAuB/F,EAAKQ,IAAM,GAItG,CAED,mBAAMgG,CAAcC,EAAOC,GACzB,MAAMC,EAAmBlJ,QAAQpC,MAAMuL,aAAaF,GACpDvH,KAAKuG,OAASiB,EAAiB1L,UAC3BwL,aAAiBI,mBAEb1H,KAAKwF,mBAAmBmC,yBAAyB3H,KAAKyF,YAAazF,KAAKuG,QAC9EvG,KAAK4H,SAGL5H,KAAK6H,QAER,EC1DI,MAAMC,sBACX,WAAAvC,CAAYhJ,GACVyD,KAAKzD,KAAOA,EAEZyD,KAAK+H,kBAAoB,KACzB/H,KAAKgI,gBAAkB,IACxB,CAMD,oBAAIrC,GACF,OAA+B,OAA3B3F,KAAK+H,kBACA/H,KAAKiI,uBAGPjI,KAAK+H,iBACb,CAKD,iBAAIG,GACF,OAAOlI,KAAKzD,KAAKE,QAAQyC,kBAAIrD,UAAWqD,kBAAIxC,MAAMjB,aAAe,EAClE,CAKD,oBAAIqK,GACF,OAA6B,OAAzB9F,KAAKgI,gBACAhI,KAAKmI,qBAGPnI,KAAKgI,eACb,CAKD,aAAMI,GACJpI,KAAKiI,6BACCjI,KAAKmI,oBACZ,CAOD,mBAAME,EAAcnI,KAACA,EAAI8D,QAAEA,EAAU,CAAE,IAErC,IAAIsE,QAAiBrL,SAASiD,GAQ9B,GALKoI,IACHA,EA/EiB,EAACpI,EAAMkC,IAC5B,IAAImG,KAAKC,eACP,CACEzH,KAAMlD,KAAKoF,KAAKC,SAAS,yBACzBuF,IAAK,uBACLhI,KAAM,QACNxC,OAAQ,CACNyK,YAAa,CACXvH,MAAOtD,KAAKoF,KAAKC,SAAS,uCAG9ByF,IAAKzI,EAAK3C,MAAM,KAAKC,OAEvB,CACEoL,WAAW,EACXxG,WAgEWyG,CAAe3I,EAAMF,KAAKzD,KAAK6F,SAIxC,CAACpC,KAAKzD,KAAK0C,GAAIe,KAAKzD,KAAK2D,MAAMC,SAASjB,kBAAItC,iBAAiB0L,IAC/D,OAAOA,EAILtE,EAAQ/F,QAAU+F,EAAQ/F,OAAOmG,cAAgBJ,EAAQ/F,OAAOoG,OAClEL,EAAQ/F,OAAOoG,OAAS,CACtBC,MAAON,EAAQ/F,OAAOmG,YACtBG,MAAM,GAECP,EAAQ/F,QAAU+F,EAAQ/F,OAAOoG,QAAQC,QAClDN,EAAQ/F,OAAOoG,OAAOE,MAAO,GAI/B,MAAMuE,EAASxK,QAAQpC,MAAMkJ,YAAYpB,EAAShE,KAAK+I,kBAAkBT,IAGzEQ,EAAO,SAAS5J,kBAAIrD,aAAaqD,kBAAIxC,MAAMf,aAAeuE,EAGtD5B,QAAQpC,MAAM8M,YAAYhF,EAAS,0BACrC1F,QAAQpC,MAAMkJ,YAAY0D,EAAQ,CAChC,sBAAuB,UACvB,wBAAyB9I,KAAKzD,KAAK0C,KAIvC,MAAMgK,EAAY,IAAIV,KAAKC,eAAeF,EAASY,WAAY,CAC7DN,WAAW,EACXO,QAAQ,EACR/G,OAAQpC,KAAKzD,KAAK6F,SAIpB,aAFM6G,EAAUG,aAAaN,GAEtBG,CACR,CAMD,wBAAMd,GACJ,MAAMkB,EAAU,IAAItJ,IAcpB,aAZMwD,QAAQC,IACZxD,KAAKkI,cAAczE,KAAI6F,OAAQpJ,OAAM8D,cACnC,MAAMiF,QAAkBjJ,KAAKqI,cAAc,CAACnI,OAAM8D,YAElD,GAAKiF,EAGL,OADAI,EAAQjJ,IAAI6I,EAAUhK,GAAIgK,GACnBA,CAAS,KAIpBjJ,KAAKgI,gBAAkBqB,EAChBA,CACR,CAOD,oBAAApB,GACE,MAAMxE,EAAM,IAAI1D,IAMhB,OALAC,KAAKkI,cAAc7I,SAASkK,IAC1B,MAAMtK,EAAKsK,EAAcrJ,KAAK3C,MAAM,KAAKC,MACzCiG,EAAIrD,IAAInB,EAAIsK,EAAc,IAE5BvJ,KAAK+H,kBAAoBtE,EAClBA,CACR,CAOD,iBAAAsF,CAAkBxM,GAChB,MAAMyH,EAAU,CACd,CAAC,SAAS9E,kBAAIrD,aAAaqD,kBAAIxC,MAAMhB,cAAesE,KAAKzD,KAAK2D,KAC9D,0BAA2B,UAEvBgF,EAAoB3I,EAAK4I,MAAM,iBAAiBvE,QAItD,OAHIsE,IACFlB,EAAQ,8BAAgC,MAEnCA,CACR,CAMD,oBAAMwF,CAAeC,GAEnB,IAAIvJ,EAAOuJ,EAEX,GAAIzJ,KAAKzD,KAAKW,WAAY,CAMxB,MAAML,QAAcI,SAASiD,GAE7B,IAAKrD,EAEH,YADA6M,GAAGC,cAAcC,MAAM,gBAAiB1J,EAAM,aAGhD,MAAM8D,EAAUhE,KAAK+I,kBAAkBlM,GACjCgN,EAAmBvL,QAAQpC,MAAMkJ,YAAYvI,EAAMqM,WAAYlF,IAE9D8F,SAAiB9J,KAAKzD,KAAKc,MAAM6G,wBAAwB,OAAQ,CAAC2F,IACzE3J,EAAO4J,EAAQ5J,IAChB,CAED,MAAMzE,EAAa,IAAIuE,KAAKkI,cAAe,CAAChI,SAGtC6J,EAAW,SAAS7K,kBAAIrD,aAAaqD,kBAAIxC,MAAMjB,mBAC/CuE,KAAKzD,KAAKuM,OAAO,CAACiB,CAACA,GAAWtO,GAAa,CAACoM,QAAQ,UAEpD7H,KAAKoI,UAGXpI,KAAKzD,KAAKsL,SACN7H,KAAKzD,KAAKc,OAAO2C,KAAKzD,KAAKc,MAAMwK,QACtC,CASD,yBAAMmC,CAAoBC,GAAQC,wBAACA,GAA2B,CAAA,GAC5D,MAAMC,EAAenK,KAAK8F,iBAAiBrI,IAAIwM,GAGzCG,EAAepK,KAAKzD,KAAKW,WAAaiN,EAAajK,KAAOiK,EAAa1N,QAAQyC,kBAAIrD,UAAWqD,kBAAIxC,MAAMf,WACxG0O,EAAgBrK,KAAKkI,cAAc3H,QAAO,EAAEL,UAAUA,IAASkK,IASrE,GANApK,KAAKgI,iBAAiBsC,OAAOL,GAC7BjK,KAAK+H,mBAAmBuC,OAAOL,SAEzBjK,KAAKzD,KAAK4H,QAAQjF,kBAAIrD,UAAWqD,kBAAIxC,MAAMjB,WAAY4O,IAGxDrK,KAAKzD,KAAKW,WAAY,OAG3B,MAAMqN,EAAY/N,aAAa4N,GAG/B,IAAKG,EAAW,OAOhB,OAL0BL,SAAkCpH,OAAOC,QAAQ,CACzEC,MAAOnF,KAAKoF,KAAKC,SAAS,mBAC1BC,QAAStF,KAAKoF,KAAKC,SAAS,qCAGAqH,EAAUD,SAC5BC,EAAUC,UAAUtL,kBAAIrD,UAAWqD,kBAAIxC,MAAMhB,WAC1D,CAOD,8BAAMiM,CAAyBsC,EAAQnO,GACrC,MAAM2O,EAAyBzK,KAAK2F,iBAAiBlI,IAAIwM,GACzDQ,EAAuBzG,QAAUlI,EACjCkE,KAAK2F,iBAAiBvF,IAAI6J,EAAQQ,GAClC,MAAMC,EAAyB,IAAI1K,KAAK2F,iBAAiBgF,gBAGnD3K,KAAKzD,KAAKuM,OAAO,CAAC,CAAC,SAAS5J,kBAAIrD,aAAaqD,kBAAIxC,MAAMjB,cAAeiP,GAAyB,CAAC7C,QAAQ,UAGxG7H,KAAKoI,UAEXwC,2BAA2BC,UAAUxL,SAASyL,IACxCA,EAAStF,qBAAuBxF,OAAM8K,EAASC,sBAAuB,EAAI,IAIhF/K,KAAKzD,KAAKsL,QACX,CAWD,0BAAamD,CAAczO,EAAMQ,GAAe,EAAOC,GAAgB,GAErE,GADoB,iBAATT,IAAmBA,QAAaU,SAASV,IAChDQ,IAAiBR,EAAKW,WAAY,OAAO,KAC7C,MAAM+N,EAAsB,IAAInD,sBAAsBvL,GACtD,IAAK0O,EAAoB/C,cAAcvL,OAAQ,OAAO,KACtD,MAAMS,KAAQJ,GAAiBD,IAAeR,EAAKc,OAAOD,MAC1D,GAAIL,IAAiBK,EACnB,OAAO,KACF,GAAIA,EAAO,CAChB,MAAMuC,EAAS,IAAII,IACbmL,EAAU,CAAC3O,EAAK0C,IAAM1C,EAAKoM,IAAKpM,EAAK2D,MAK3C,OAJA9C,EAAMiC,SAAQxC,IACZ,MAAMM,EAAW+B,kBAAItC,iBAAiBC,GAClCqO,EAAQ/K,SAAShD,IAAWwC,EAAOS,IAAIvD,EAAMoC,GAAIpC,EAAM,IAEtD8C,CACb,CACM,aAAasL,EAAoBnF,gBAEpC,ECjTI,MAAM8E,2BAEXG,sBAAuB,EAEvB,WAAAxF,CAAY4F,GAAMC,IAChBpL,KAAKmL,IAAMA,EACXnL,KAAKzD,KAAO4O,EAAI5O,KAChByD,KAAKqL,UAAYD,EACjBpL,KAAKwF,mBAAqB,IAAIsC,sBAAsB9H,KAAKzD,KAC1D,CAGDf,iBAAmB,IAAIuE,IAKvB,WAAOhE,GACL8F,MAAMC,GAAG,mBAAmB,CAACqJ,EAAKC,KAEhC,GAAKvN,KAAKyN,QAAQ7N,IAAI,iBAAiB8N,KAAKC,kBAAkBL,KAASjM,kBAAIxB,mBAAmByN,EAAI5O,KAAKkE,MAAQ,OAE/G,MAAMqK,EAAWF,2BAA2BC,UAAUpN,IAAI0N,EAAIM,OAC9D,GAAIX,EAMF,OALAA,EAASY,kBACLZ,EAASC,uBACXI,EAAIQ,QAAQ,IAAIC,WAAW1M,kBAAIrD,WAC/BiP,EAASC,sBAAuB,IAIpC,MAAMc,EAAc,IAAIjB,2BAA2BO,EAAKC,GAExD,OADAR,2BAA2BC,UAAUzK,IAAI+K,EAAIM,MAAOI,GAC7CA,EAAYH,YAAY,IAIjC7J,MAAMC,GAAG,kBAAkBwH,MAAO6B,IAChC,MAAML,EAAWF,2BAA2BC,UAAUpN,IAAI0N,EAAIM,OAC9D,GAAIX,EAIF,aAFMA,EAASgB,qBAERlB,2BAA2BC,UAAUP,OAAOa,EAAIM,MACxD,IAIH5J,MAAMkK,KAAK,sBAAuBR,IAChC,MAAMS,EAAQ,IAAIT,EAAIU,OAAOC,QAAQ,CACnClJ,MAAOnF,KAAKoF,KAAKC,SAAS,sBAC1BiJ,MAAOjN,kBAAIrD,UACXuP,KAAM,GACNgB,QAAQ1M,GACCR,kBAAIxB,mBAAmBgC,EAAKnD,KAAKkE,MAE1C,QAAA4L,CAASC,GACP,IAAKpN,kBAAIxB,mBAAmB4O,EAAO5M,KAAKnD,KAAKkE,MAAO,OACpD,IAAI0K,EAAMmB,EAAOnB,IACbC,EAAO,CAACkB,EAAOC,SACnB,MAAMzB,EAAWF,2BAA2BC,UAAUpN,IAAI0N,EAAIM,OAC9D,GAAIX,EACFA,EAAS0B,YAAYF,EAAOG,wBACvB,CACL,MAAMZ,EAAc,IAAIjB,2BAA2BO,EAAKC,GACxDR,2BAA2BC,UAAUzK,IAAI+K,EAAIM,MAAOI,GACpDA,EAAYW,YAAYF,EAAOG,mBAC3C,CACS,IAEHlB,EAAImB,gBAAgBV,EAAO,CAAEW,YAAY,GAAO,GAEnD,CAKD,uBAAMC,SACE5M,KAAKwF,mBAAmB4C,UAC9B,MAAMyE,EAAkB,WAAW7M,KAAKwF,mBAAmBM,kBAAkB6E,UAK7E,aAFM3K,KAAK8M,mBAEJC,eAAe7N,kBAAI7C,UAAUT,UAAW,CAC7CH,WAAYoR,EACZlG,OAAQ,CACNC,kBAAmBhI,OAAOC,MAAM+H,kBAChCC,UAAWjI,OAAOC,MAAMgI,WAE1B3J,WAAY8C,KAAKzD,KAAKW,WACtB8P,QAAShN,KAAKzD,KAAKyQ,QACnBC,gBAAiBpP,KAAKO,KAAKC,OAAyC,IAAhC2B,KAAKzD,KAAK0B,OAAOC,YAExD,CAMD,cAAMgP,CAAS5F,GACb,IAAKtH,KAAKmL,IAAIgC,WAAY,OAC1B,MAAMzN,EAAO0N,WAAWC,iBAAiB/F,GACzC,GAAkB,SAAd5H,EAAKe,KAAiB,OAE1B,MAAkB,iBADCxD,SAASyC,EAAKQ,OACxBO,MAETT,KAAK+K,sBAAuB,EACrB/K,KAAKwF,mBAAmBgE,eAAe9J,EAAKQ,YAHnD,CAID,CAKD,sBAAMoN,CAAiBhG,GACrB,MAAMiG,EAAUjG,EAAMkG,cAAcC,QAAQ,kBAAkBlM,QAAQ0I,OAChEpN,EAAQmD,KAAKwF,mBAAmBM,iBAAiBrI,IAAI8P,GACvDvN,KAAKzD,KAAKW,WACZV,aAAaK,EAAMqD,MAAMwN,IAAI,CAAEpG,UAE/BzK,GAAO8Q,MAAM9F,QAAO,EAAM,CAAC+F,UAAU,GAExC,CAKD,0BAAMC,CAAqBvG,GACzB,MAAMiG,EAAUjG,EAAMkG,cAAcC,QAAQ,kBAAkBlM,QAAQ0I,OAChE6D,EAAY9N,KAAKwF,mBAAmBM,iBAAiBrI,IAAI8P,GAC/D,IAAI1Q,EAAQiR,EACZ,IAAKA,EAAU5Q,WAAY,CACzB,MAAM6Q,EAAYD,EAAUrR,QAAQyC,kBAAIrD,UAAWqD,kBAAIxC,MAAMf,WAC7DkB,QAAcI,SAAS8Q,EACxB,CACDlR,GAAO8Q,MAAM9F,QAAO,EACrB,CAKD,4BAAMmG,CAAuB1G,GAC3B,MAAM2C,EAAS3C,EAAMkG,cAAcC,QAAQ,kBAAkBlM,QAAQ0I,OAGrE,OADAjK,KAAK+K,sBAAuB,EACrB/K,KAAKwF,mBAAmBwE,oBAAoBC,EACpD,CAKD,6BAAMgE,CAAwB3G,GAC5B,MAAM2C,EAAS3C,EAAMkG,cAAcC,QAAQ,kBAAkBlM,QAAQ0I,OAGrE,OADAjK,KAAK+K,sBAAuB,EACrB/K,KAAKwF,mBAAmBwE,oBAAoBC,EAAQ,CAACC,yBAAyB,GACtF,CAKD,oCAAMgE,CAA+B5G,GACnC,MAAMiG,EAAUjG,EAAMkG,cAAcC,QAAQ,kBAAkBlM,QAAQ0I,OAChEpN,EAAQmD,KAAKwF,mBAAmBM,iBAAiBrI,IAAI8P,GAC3D,OAAIvN,KAAKzD,KAAKW,WAELV,aAAaK,EAAMqD,MAAMyN,MAAM9F,QAAO,IACpChL,EAAM8Q,MAAMQ,UAErBtR,EAAM8Q,MAAM/F,QAGP,IAAIvC,oCAAoCrF,KAAKwF,mBAAoB+H,GAAS1F,QAAO,GACzF,CAMD,UAAA6D,GAEE,MAAM0C,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAY,6BAA6BrP,kBAAIrD,cAAcgC,KAAKoF,KAAKC,SAAS,4BAClF,MAAMsL,EAAOxO,KAAKqL,UAAUoD,cAAc,6BAC1C,IAAKD,EAAM,OACXA,EAAKE,YAAYN,EAAIO,mBAGrB,MAAMC,EAAY5O,KAAKqL,UAAUoD,cAAc,eAC/CL,EAAIG,UAAY,mBAAmBrP,kBAAIrD,6CAA6CqD,kBAAIrD,oBACxF,MAAMgT,EAAIT,EAAIO,kBACdC,EAAUF,YAAYG,GACtB7O,KAAKwM,YAAYqC,EAClB,CAMD,iBAAMrC,CAAY5Q,GAEhB,MAAMwS,EAAMC,SAASC,cAAc,OACnCF,EAAIG,gBAAkBvO,KAAK4M,oBAC3B,MAAMiC,EAAIT,EAAIO,kBACd/S,EAAU8S,YAAYG,GAGtBA,EAAEC,iBAAiB,cAAczP,SAAQ0P,GAAKA,EAAEC,iBAAiB,QAAShP,KAAKsN,iBAAiB2B,KAAKjP,SACrG6O,EAAEC,iBAAiB,wBAAwBzP,SAAQ0P,GAAKA,EAAEC,iBAAiB,QAAShP,KAAKkO,+BAA+Be,KAAKjP,SAC7H6O,EAAEC,iBAAiB,cAAczP,SAAQ0P,GAAKA,EAAEC,iBAAiB,QAAShP,KAAK6N,qBAAqBoB,KAAKjP,SACzG6O,EAAEC,iBAAiB,gBAAgBzP,SAAQ0P,GAAKA,EAAEC,iBAAiB,QAAShP,KAAKgO,uBAAuBiB,KAAKjP,SAC7G6O,EAAEC,iBAAiB,iBAAiBzP,SAAQ0P,GAAKA,EAAEC,iBAAiB,QAAShP,KAAKiO,wBAAwBgB,KAAKjP,SAG/G,MAAMkP,EAAW,CACfC,aAAc,QACdC,aAAc,IAAIlQ,kBAAIrD,YACtBwT,YAAa,CAACC,KAAM,IAAMtP,KAAKmL,IAAIgC,aAAenN,KAAKzD,KAAKW,YAC5DqS,UAAW,CAACD,KAAMtP,KAAKkN,WAEzBtR,EAAUoT,iBAAiB,OAAQE,EAASK,UAAUD,KAAKL,KAAKjP,MACjE,CAKD,sBAAM8M,GACJ,OAAOvJ,QAAQC,IACbxD,KAAKwF,mBAAmB0C,cAAczE,KAAI6F,OAAQpJ,OAAMpE,gBACtD,MAAMe,QAAcI,SAASiD,GAE7B,OADIrD,IAAOA,EAAM2S,KAAKxP,KAAKmL,IAAIM,OAASzL,KAAKmL,KACtCtO,CAAK,IAGjB,CAKD,wBAAMiP,GACJ,OAAOvI,QAAQC,IACbxD,KAAKwF,mBAAmB0C,cAAczE,KAAI6F,OAAQpJ,OAAMpE,gBACtD,MAAMe,QAAcI,SAASiD,GAE7B,OADIrD,EAAM2S,KAAKxP,KAAKmL,IAAIM,eAAe5O,EAAM2S,KAAKxP,KAAKmL,IAAIM,OACpD5O,CAAK,IAGjB,EC7PI,MAAM4S,EAAiB,CAC5B,QACA,WACA,aACA,OACA,UACA,QACA,OACA,YACA,YA+CF,MAAMC,yBAAyBpK,gBAE7B,MAAIrG,GACF,MAAO,GAAGC,kBAAIrD,oCACf,CAED,SAAImH,GACF,OAAOnF,KAAKoF,KAAKC,SAAS,oCAC3B,CAED,YAAI+C,GACF,MAAO,yDACR,CAED,aAAMK,GACJ,MAAMqJ,EAAQpH,KAAKoH,MAAMpP,QAAOqP,IAAMH,EAAetP,SAASyP,KACxDlQ,QAAakG,MAAMU,UACzB5G,EAAKmQ,MAAQ,GACb,IAAK,MAAMpP,KAAQkP,EACjBjQ,EAAKmQ,MAAMxP,KAAK,CACdyP,QAASjS,KAAKC,SAASL,IAAIyB,kBAAIrD,UAAW,qBAAqBiF,SAC/DK,MAAOV,EACPK,MAAOjD,KAAKoF,KAAKC,SAAS,cAAczC,OAG5C,OAAOf,EAAKgC,MAAK,CAACpC,EAAEqC,IAAOrC,EAAEwB,MAAQa,EAAEb,MAAS,EAAKxB,EAAEwB,MAAQa,EAAEb,OAAU,EAAI,GAChF,CAED,mBAAMuG,CAAcC,EAAOC,GACzBwI,OAAOC,QAAQzI,GAAUlI,SAAQ,EAAEoB,EAAMwP,MACvCpS,KAAKC,SAASsC,IAAIlB,kBAAIrD,UAAW,qBAAqB4E,EAAK1C,cAAekS,EAAK,GAElF,ECvFH,IAAIC,EAAuC,KAEpC,MAAMC,2BACX,WAAOpU,GAEA8B,KAAKyN,QAAQ7N,IAAI,0BAA0B2S,QAAWvS,KAAKyN,QAAQ7N,IAAI,2BAA2B2S,QAAW9R,QAAQpC,MAAMqC,eAAeV,KAAKyN,QAAQ7N,IAAI,2BAA2Be,QAAS,WAGpMqD,MAAMkK,KAAK,sCAAsCzC,MAAO+G,IACtD,MAAMtP,EAAO,oBACPuP,EAAeD,EAASE,OAAOC,MAAKC,GAAkB,WAAXA,EAAIxR,KAC/CyR,EAAW,CACfzR,GAAIC,kBAAIrD,UACRkF,OACA4P,SAAU,UAAU5P,IACpBN,KAAM,SACNmQ,OAAQ,UAAU1R,kBAAIrD,aAGxBwU,EAASQ,OAAOxQ,KAAKqQ,GAErBJ,EAAaO,OAAOC,QAAQJ,EAAS,IAIvC7O,MAAMkK,KAAK,8BAA8BzC,MAAOyH,IAC9Cb,EAAuC,MAAMA,6CAA6Ca,EAAWxF,IAAIyF,sBAEvG,WAAAzL,CAAY0L,GACVrL,QACA5F,KAAKiR,cAAgBA,EACrBjR,KAAK3C,MAAQ,KACb2C,KAAKkR,qBAAuB,IAC7B,CAMD,yBAAMC,GAEJ,GADAnR,KAAK3C,MAAQ2C,KAAKiR,cAAc5T,OAC3B2C,KAAK3C,MAAO,OAEjB2C,KAAKkR,qBAAuBrT,KAAKC,SAASL,IAAIyB,kBAAIrD,UAAW,qBAE7D,MAAMuV,EAAkB,CACpBnS,GAAIC,kBAAIrD,UACR4E,KAAM,UAIV,IAAK,MAAO4Q,EAAK9U,KAASyD,KAAK3C,MAAMD,MAAM4S,UAAW,CAGpD,GAAKP,EAAetP,SAAS5D,EAAKkE,MAAQ,SAI1C,IADmBvB,kBAAIlB,aAAazB,GACjB,SAGnB,MAAM+U,QAAmBC,sBAAQvG,cAAczO,GAAM,EAAMyD,KAAK3C,MAAMD,OACtE,IAAMkU,EAAa,SAGnB,MAAME,EAAQ,CAAE,EACV3Q,EAAOtE,GAAM0B,QAAQ4C,KAC3B,GAAIA,GAAMuG,MAAQvG,EAAKM,MAAQ,GAAKN,EAAKQ,IAAM,GAAI,CACjD,MAAM+F,EAAM2J,EAAWxF,IAAIkG,MAAMxO,KAAK,aAChCyO,EAAS9S,OAAOC,MAAM+H,kBAAkB/F,EAAKuG,MAAMtG,OAASD,EAAKuG,IACjEuK,EAAyB,YAAb9Q,EAAKuG,IAAoBsK,EAAS,GAAGtK,KAAOsK,IAC9DF,EAAMI,KAAO,GAAG/Q,EAAKM,OAAS,MAAMN,EAAKQ,IAAM,EAAI,IAAIR,EAAKQ,MAAQ,KACpEmQ,EAAMxO,MAAQ,GAAGzG,EAAKwE,SAASyQ,EAAMI,QAAQD,GAC9C,CACD,MAAME,EAAY,CACd5S,GAAI,GAAGC,kBAAIrD,aAAaU,EAAK0C,KAC7B8B,KAAMxE,EAAKwE,KACXN,KAAM,iBACN+Q,QACAM,iBAAiB,EACjBhU,SAAU,CAAE4D,MAAM,IAItB1B,KAAKiR,cAAcc,SAASF,EAAWT,GAGvC,MACM1R,EAAO,CAAEmS,YAAWP,aAAYU,WADnB,eAEbhS,KAAKiR,cAAcgB,aAAavS,EACvC,CACF,EACF,IAIHmC,MAAMkK,KAAK,+CAA+CzC,MAAO2H,IAC/DA,EAAciB,yBAAyB,IAAIhC,EAAqCe,GAAe,IAGlG,EC/FHpP,MAAMkK,KAAK,SFMJ,SAASoG,oBACd,MAAMxC,EAAQpH,KAAKoH,MAAMpP,QAAOqP,IAAMH,EAAetP,SAASyP,KAE9D,IAAK,MAAMnP,KAAQkP,EACjB9R,KAAKC,SAAS0B,SAASN,kBAAIrD,UAAW,qBAAqB4E,EAAK1C,cAAe,CAC7EqU,MAAO,QACPzL,QAAQ,EACRlG,KAAM4R,QACNC,SAAS,EACTC,gBAAgB,IAIpB1U,KAAKC,SAAS0B,SAASN,kBAAIrD,UAAW,YAAa,CACjDkF,KAAM,+BACNyR,KAAM,+BACNJ,MAAO,QACPzL,QAAQ,EACRlG,KAAM4R,QACNC,SAAS,EACTC,gBAAgB,IAGlB1U,KAAKC,SAAS2U,aAAavT,kBAAIrD,UAAW,oBAAqB,CAC7DkF,KAAM,mCACNyR,KAAM,mCACNJ,MAAO,QACPzL,QAAQ,EACRlG,KAAMiP,iBACN5O,MAAO,mCACP4R,YAAY,IAGd7U,KAAKC,SAAS0B,SAASN,kBAAIrD,UAAW,oBAAqB,CACzDkF,KAAM,uCACNyR,KAAM,uCACNJ,MAAO,QACPzL,QAAQ,EACRlG,KAAM4R,QACNC,SAAS,EACTC,gBAAgB,GAEpB,IE/CA1Q,MAAMkK,KAAK,OAAQnK,uBAAuB7F,MAC1C8F,MAAMkK,KAAK,OAAQ/M,4BAA4BjD,MAC/C8F,MAAMkK,KAAK,OAAQxQ,kBAAkBQ,MACrC8F,MAAMkK,KAAK,OAAQnB,2BAA2B7O,MAC9C8F,MAAMkK,KAAK,OAAQoE,2BAA2BpU,MAC9C8F,MAAMkK,KAAK,SAASzC,UACHzL,KAAKyN,QAAQ7N,IAAIlC,kBAAkBM,WAC3C0P,IAAM,CACXjP,UAAWf,kBAAkBe,UAC7BqW,WAAYpX,kBAAkBqB,iBAC9BoO,cAAelD,sBAAsBkD,cACrCpO,iBAAkBrB,kBAAkBqB,iBACpCE,mBAAoBvB,kBAAkBuB,mBACtCY,mBAAoBnC,kBAAkBmC,mBACtCM,aAAczC,kBAAkByC,aACjC"}