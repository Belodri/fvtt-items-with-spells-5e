{"version":3,"file":"items-with-spells-5e.min.js","sources":["classes/defaults.js","classes/actor-sheet.js","classes/actor.js","classes/item-spell-overrides.js","classes/item.js","classes/item-sheet.js","classes/settings.mjs","extensions/token-action-hud-dnd5e.js","init.js"],"sourcesContent":["export class ItemsWithSpells5e {\r\n  static MODULE_ID = 'items-with-spells-5e';\r\n  static SETTINGS = {};\r\n  static FLAGS = {\r\n    itemSpells: 'item-spells',\r\n    parentItem: 'parent-item',\r\n  };\r\n  static TEMPLATES = {\r\n    spellsTab: `modules/${ItemsWithSpells5e.MODULE_ID}/templates/spells-tab.hbs`,\r\n    overrides: `modules/${ItemsWithSpells5e.MODULE_ID}/templates/overrides-form.hbs`,\r\n  };\r\n\r\n  static init() {\r\n    ItemsWithSpells5e.preloadTemplates();\r\n  }\r\n\r\n  static preloadTemplates() {\r\n    dnd5e.utils.registerHandlebarsHelpers();\r\n    loadTemplates(ItemsWithSpells5e.TEMPLATES);\r\n  }\r\n\r\n  /**\r\n   * Test if an item is an items-with-spells-5e item\r\n   * @public\r\n   * @param {Item5e[]} item The item to get the attached spells from\r\n   * @returns the parent item id or `null` if no parent item is found\r\n   */\r\n  static isIwsItem(item) {\r\n    return item.getFlag(ItemsWithSpells5e.MODULE_ID, ItemsWithSpells5e.FLAGS.itemSpells) ?? null;\r\n  }\r\n  /**\r\n   * Test if a spell belongs to an items-with-spells-5e item\r\n   * Alias for getSpellParentId\r\n   * @public\r\n   * @param {Item5e[]} spell The spell with a parent item\r\n   * @returns the parent item id or `null` if no parent item is found\r\n   */\r\n  static isIwsSpell(spell) {\r\n    return ItemsWithSpells5e.getSpellParentId(spell);\r\n  }\r\n\r\n  /**\r\n   * Test if a spell has a parent item by seeing if a parent id is set\r\n   * @public\r\n   * @param {Item5e[]} spell The spell with a parent item\r\n   * @returns the parent item id or `null` if no parent item is found\r\n   */\r\n  static getSpellParentId(spell) {\r\n    return spell.getFlag(ItemsWithSpells5e.MODULE_ID, ItemsWithSpells5e.FLAGS.parentItem) ?? null;\r\n  }\r\n\r\n  /**\r\n   * Get the parent item of a spell on the same actor\r\n   * @public\r\n   * @param {Item5e[]} spell The spell to get the parent item of\r\n   * @param {boolean} embeddedOnly Only return the item if owned by an actor\r\n   * @param {Map} providedItems Only return spells included in these items (e.g. pass actor.items)\r\n   * @returns the parent item or `null` if spell has no parent or parent is not owned by the same actor\r\n   */\r\n  static async getSpellParentItem(spell, embeddedOnly = false, providedItems = false) {\r\n    if (embeddedOnly && !spell.isEmbedded) return null;\r\n    const parentId = ItemsWithSpells5e.getSpellParentId(spell);\r\n    if (!parentId) return null;\r\n    const items = providedItems ?? spell.actor?.items ?? false;\r\n    if (embeddedOnly && !items) {\r\n      return null;\r\n    } else if (items) {\r\n      const parentIdLast = parentId.split('.').pop();\r\n      return items.get(parentIdLast) ?? null;\r\n    } else {\r\n      return await fromUuid(parentId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test if a type of item is enabled to have the spells tab from items-with-spells-5e\r\n   * @public\r\n   * @param {string} itemType The spell with a parent item\r\n   * @returns {boolean} true if spells tab should be visible\r\n   */\r\n  static isIncludedItemType(itemType) {\r\n    let include = false;\r\n    try {\r\n      include = !!game.settings.get(\r\n        ItemsWithSpells5e.MODULE_ID,\r\n        `isIncludedItemType${itemType.titleCase()}`\r\n      );\r\n    } catch {}\r\n    return include;\r\n  }\r\n\r\n  /**\r\n   * Test if the spells of an item should be shown (item is attuned, equipped, identified)\r\n   * @public\r\n   * @param {Item5e[]} item The parent item of the spell(s)\r\n   * @returns {boolean} true if item should be shown\r\n   */\r\n  static isUsableItem(item) {\r\n    // Unusable if item is not identified\r\n    if (item.system?.identified === false) return false;\r\n    // Unusable if item is not equipped and setting set to exclude based unequipped\r\n    const iwsExcludeUnequipped = game.settings.get(ItemsWithSpells5e.MODULE_ID, \"excludeUnequipped\");\r\n    if (iwsExcludeUnequipped && item.system.equipped === false) return false;\r\n    // Unusable if item is not attuned (but still show to GM)\r\n    if (!game.user.isGM) {\r\n      if (foundry.utils.isNewerVersion(game.system.version, \"3.1.99\")) {\r\n        const attunementRequired = item.system.attunement === \"required\";\r\n        if (!item.system.attuned && attunementRequired) return false;\r\n      } else {\r\n        const attunementRequired = CONFIG.DND5E.attunementTypes?.REQUIRED ?? 1;\r\n        if (item.system?.attunement === attunementRequired) return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n/* A class made to make managing the operations for an Actor. */\nexport class ItemsWithSpells5eActorSheet {\n  /* Set up the Actor Sheet Patch */\n  static init() {\n    const id = IWS.MODULE_ID;\n    const fn = ItemsWithSpells5eActorSheet.prepareItemSpellbook;\n    [\"Character\", \"NPC\"].forEach(a => {\n      libWrapper.register(id, `dnd5e.applications.actor.ActorSheet5e${a}.prototype._prepareSpellbook`, fn, \"WRAPPER\");\n    });\n  }\n\n  /**\n   * Filter iws spells into their own sections, removing them from standard sections.\n   * @param {Function} wrapped      A wrapping function.\n   * @param {object} data           The sheet data. **will be mutated**\n   * @param {Item5e[]} spells       The actor's spells.\n   * @returns {object}              The spellbook data.\n   */\n  static prepareItemSpellbook(wrapped, data, spells) {\n    const order = game.settings.get(IWS.MODULE_ID, \"sortOrder\") ? 20 : -5;\n    const createSection = (iws, uses = {}, spells = []) => {\n      return {\n        order: order,\n        label: iws.name,\n        usesSlots: false,\n        canCreate: false,\n        canPrepare: false,\n        spells,\n        uses: uses.value ?? \"-\",\n        slots: uses.max ?? \"-\",\n        override: 0,\n        dataset: {\"iws-item-id\": iws.id},\n        prop: \"item-\"+iws.id\n      };\n    };\n\n    // iterate through spells and put them in respective maps\n    const nonItemSpells = [];\n    const spellsPerItem = new Map();\n    spells.forEach((spell) => {\n      const parentId = IWS.getSpellParentId(spell);\n      if ( parentId && this.actor.items.some(item => [item.id, item.uuid].includes(parentId)) ) {\n        const parentIdLast = parentId.split('.').pop();\n        if (!spellsPerItem.get(parentIdLast)) spellsPerItem.set(parentIdLast, []);\n        spellsPerItem.get(parentIdLast).push(spell);\n      } else {\n        nonItemSpells.push(spell);\n      }\n    });\n\n    const spellbook = wrapped(data, nonItemSpells);\n\n    // get all the items with spells on this actor\n    const itemsWithSpells = this.actor.items.filter(item => {\n      const fl = item.getFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells)?.length;\n      if (!fl) return false;\n      const include = IWS.isIncludedItemType(item.type);\n      return include;\n    });\n\n    // create a new spellbook section for each item with spells attached\n    itemsWithSpells.forEach((iws) => {\n      const iwsSpells = spellsPerItem.get(iws.id);\n      if (!iwsSpells) return;\n      const iwsUsable = IWS.isUsableItem(iws);\n      if (!iwsUsable) return;\n      const section = createSection(iws, iws.system.uses, iwsSpells);\n      spellbook.push(section);\n    });\n\n    spellbook.sort((a, b) => (a.order - b.order) || (a.label - b.label));\n    return spellbook;\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n/**\n * A class made to make managing the operations for an Actor.\n */\nexport class ItemsWithSpells5eActor {\n  /* Set up the create/delete Item hooks. */\n  static init() {\n    Hooks.on('createItem', ItemsWithSpells5eActor.handleCreateItem);\n    Hooks.on('deleteItem', ItemsWithSpells5eActor.handleDeleteItem);\n  }\n\n  /**\n   * When an item is deleted from an actor, find any of its child spells and prompt for those to be deleted.\n   * @param {Item5e} itemDeleted            The parent item that was deleted.\n   * @param {object} options                Deletion options.\n   * @param {string} userId                 The id of the user who performed the deletion.\n   * @returns {Promise<Item5e[]|void>}      The deleted spells.\n   */\n  static async handleDeleteItem(itemDeleted, options, userId) {\n    if (userId !== game.user.id) return;\n    if (!(itemDeleted.parent instanceof Actor)) return;\n    if ([\"group\", \"vehicle\"].includes(itemDeleted.parent.type)) return;\n\n    const ids = itemDeleted.getFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells) ?? [];\n    if (!ids.length) return;\n\n    const spellIds = itemDeleted.actor.items.reduce((acc, item) => {\n      const flag = IWS.getSpellParentId(item);\n      if ([itemDeleted.id, itemDeleted.uuid].includes(flag)) acc.push(item.id);// check uuid, too, for backwards compat.\n      return acc;\n    }, []);\n\n    if (!spellIds.length) return;\n    const confirm = options.itemsWithSpells5e?.alsoDeleteChildSpells ?? await Dialog.confirm({\n      title: game.i18n.localize(\"IWS.MODULE_NAME\"),\n      content: game.i18n.localize(\"IWS.QUERY_ALSO_DELETE\")\n    });\n    if (confirm) return itemDeleted.actor.deleteEmbeddedDocuments(\"Item\", spellIds);\n  }\n\n  /**\n   * When an item is created on an actor, if it has any spells to add, create those, and save\n   * a reference to their uuids and ids in the parent item within `flags.<module>.item-spells`.\n   * Each added spell also gets `flags.<module>.parent-item` being the parent item's id.\n   * @param {Item5e} itemCreated      The item with spells that was created.\n   * @param {object} options          Creation options.\n   * @param {string} userId           The id of the user creating the item.\n   * @returns {Promise<Item5e>}       The parent item updated with new flag data.\n   */\n  static async handleCreateItem(itemCreated, options, userId) {\n    if (userId !== game.user.id) return;\n    if (!(itemCreated.parent instanceof Actor)) return;\n    if ([\"group\", \"vehicle\"].includes(itemCreated.parent.type)) return;\n\n    // bail out from creating the spells if the parent item is not valid.\n    const include = IWS.isIncludedItemType(itemCreated.type);\n    if (!include) return;\n\n    // Get array of objects with uuids of spells to create.\n    const spellUuids = itemCreated.getFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells) ?? [];\n    if (!spellUuids.length) return;\n\n    // Create the spells from this item.\n    const spells = await Promise.all(spellUuids.map(d => ItemsWithSpells5eActor._createSpellData(itemCreated, d)));\n    const spellData = spells.filter(s => s);\n    const spellsCreated = await itemCreated.actor.createEmbeddedDocuments(\"Item\", spellData);\n\n    const ids = spellsCreated.map(s => ({uuid: s.uuid, id: s.id}));\n    return itemCreated.setFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells, ids);\n  }\n\n  /**\n   * Create the data for a spell with attack bonus, limited uses, references, and overrides.\n   * @param {Item5e} parentItem     The item that has spells.\n   * @param {object} data           Object with uuid and overrides.\n   * @returns {Promise<object>}     The item data for creation of a spell.\n   */\n  static async _createSpellData(parentItem, data) {\n    const spell = await fromUuid(data.uuid);\n    if (!spell) return null;\n\n    // Adjust attack bonus.\n    const changes = data.changes?.system || {};\n    if (changes.attackBonus) {\n      changes.ability = \"none\";\n      changes.attackBonus = `${changes.attackBonus || 0} - @prof`;\n    }\n\n    // Adjust limited uses.\n    const usesMax = changes.uses?.max;\n    if (usesMax) {\n      const rollData = parentItem.getRollData({deterministic: true});\n      changes.uses.value = dnd5e.utils.simplifyBonus(usesMax, rollData);\n    }\n\n    // Adjust item id for consumption.\n    if (changes.consume?.amount) {\n      changes.consume.type = \"charges\";\n      changes.consume.target = parentItem.id;\n    }\n\n    // Create and return spell data.\n    const spellData = game.items.fromCompendium(spell);\n    const mergeData = {\n      [`flags.${IWS.MODULE_ID}.${IWS.FLAGS.parentItem}`]: parentItem.id,\n      system: {...changes, \"preparation.mode\": \"atwill\"}\n    };\n    const tidy5eSectionFlag = spell.flags['tidy5e-sheet']?.section;\n    if (tidy5eSectionFlag) {\n      mergeData['flags.tidy5e-sheet.section'] = null;\n    }\n    return foundry.utils.mergeObject(spellData, mergeData);\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n/**\n * The form to control Item Spell overrides (e.g. for consumption logic)\n */\nexport class ItemsWithSpells5eItemSpellOverrides extends FormApplication {\n  constructor(itemWithSpellsItem, itemSpellId) {\n    const itemSpellFlagData = itemWithSpellsItem.itemSpellFlagMap.get(itemSpellId);\n    // set the `object` of this FormApplication as the itemSpell data from the parent item's flags\n    super(itemSpellFlagData?.changes ?? {});\n\n    // the spell we are editing\n    this.itemSpellId = itemSpellId;\n\n    // the ItemsWithSpells5eItem instance to use\n    this.itemWithSpellsItem = itemWithSpellsItem;\n\n    // the parent item\n    this.item = itemWithSpellsItem.item;\n\n    // the fake or real spell item\n    this.itemSpellItem = itemWithSpellsItem.itemSpellItemMap.get(itemSpellId);\n  }\n\n  get id() {\n    return `${IWS.MODULE_ID}-${this.item.id}-${this.itemSpellItem.id}`;\n  }\n\n  get title() {\n    return `${this.item.name} - ${this.itemSpellItem.name}`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: ['dnd5e', 'sheet', 'item', \"iws\"],\n      template: IWS.TEMPLATES.overrides,\n      width: 560,\n      closeOnSubmit: false,\n      submitOnChange: true,\n      height: 'auto'\n    });\n  }\n\n  getData() {\n    const uses = this.item.system.uses || {};\n    const ret = {\n      hasAttack: this.itemSpellItem.hasAttack,\n      hasSave: this.itemSpellItem.hasSave,\n      save: this.itemSpellItem.system.save,\n      overrides: this.object,\n      config: {\n        limitedUsePeriods: CONFIG.DND5E.limitedUsePeriods,\n        abilities: CONFIG.DND5E.abilities,\n        spellLevels: CONFIG.DND5E.spellLevels,\n        // Temporary custom object to use selectOptions until DnD5e gets v12 compliant\n        saveScaling: {\n          \"spell\": { label: \"DND5E.Spellcasting\" },\n          ...CONFIG.DND5E.abilities,\n          \"flat\": { label: \"DND5E.Flat\" }\n        }\n      },\n      isFlatDC: this.object?.system?.save?.scaling === 'flat',\n      spell: this.itemSpellItem,\n      parentItem: {\n        id: this.item.id,\n        name: this.item.name,\n        isEmbedded: this.item.isEmbedded,\n        hasUses: this.item.hasLimitedUses && (uses.per in CONFIG.DND5E.limitedUsePeriods) && (uses.max > 0)\n      }\n    };\n    return ret;\n  }\n\n  async _updateObject(event, formData) {\n    const formDataExpanded = foundry.utils.expandObject(formData);\n    await this.itemWithSpellsItem.updateItemSpellOverrides(this.itemSpellId, formDataExpanded.overrides);\n    this.object = formDataExpanded.overrides;\n\n    if (this.item.isEmbedded) {\n      ui.notifications.warn('The existing spells on the parent actor will not be modified to reflect this change.');\n    }\n\n    // close if this is a submit (button press or `enter` key)\n    if (event instanceof SubmitEvent) this.close();\n    else this.render();\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\nimport {ItemsWithSpells5eItemSheet} from './item-sheet.js';\n\n/**\n * Creates a fake temporary item as filler for when a UUID is unable to resolve an item\n * @param {string} uuid - the `uuid` of the source of this item\n * @returns item with the correct flags to allow deletion\n */\nconst FakeEmptySpell = (uuid, parent) =>\n  new Item.implementation(\n    {\n      name: game.i18n.localize(\"IWS.MISSING_ITEM\"),\n      img: 'icons/svg/hazard.svg',\n      type: 'spell',\n      system: {\n        description: {\n          value: game.i18n.localize(\"IWS.MISSING_ITEM_DESCRIPTION\"),\n        }\n      },\n      _id: uuid.split('.').pop()\n    },\n    {\n      temporary: true,\n      parent\n    }\n  );\n\n/**\n * A class made to make managing the operations for an Item with spells attached easier.\n */\nexport class ItemsWithSpells5eItem {\n  constructor(item) {\n    this.item = item;\n\n    this._itemSpellFlagMap = null;\n    this._itemSpellItems = null;\n  }\n\n  /**\n   * A map of what the \"id\" of the new spell would be to its corresponding flag definition on this parent item\n   * Used when updating an item's overrides as the map lookup is easier than the array lookup\n   */\n  get itemSpellFlagMap() {\n    if (this._itemSpellFlagMap === null) {\n      return this._getItemSpellFlagMap();\n    }\n\n    return this._itemSpellFlagMap;\n  }\n\n  /**\n   * Raw flag data\n   */\n  get itemSpellList() {\n    return this.item.getFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells) ?? [];\n  }\n\n  /**\n   * A map of what the \"id\" of the New spell would be to its corresponding Item Data, taking any defined overrides into account.\n   */\n  get itemSpellItemMap() {\n    if (this._itemSpellItems === null) {\n      return this._getItemSpellItems();\n    }\n\n    return this._itemSpellItems;\n  }\n\n  /**\n   * Update this class's understanding of the item spells\n   */\n  async refresh() {\n    this._getItemSpellFlagMap();\n    await this._getItemSpellItems();\n  }\n\n  /**\n   * Gets the child item from its uuid and provided changes.\n   * If the uuid points to an item already created on the actor: return that item.\n   * Otherwise create a temporary item, apply changes, and return that item's json.\n   */\n  async _getChildItem({uuid, changes = {}}) {\n    // original could be in a compendium or on an actor\n    let original = await fromUuid(uuid);\n\n    // return a fake 'empty' item if we could not create a childItem\n    if (!original) {\n      original = FakeEmptySpell(uuid, this.item.parent);\n    }\n\n    // this exists if the 'child' spell has been created on an actor\n    if (original.getFlag(IWS.MODULE_ID, IWS.FLAGS.parentItem) === this.item.uuid) {\n      return original;\n    }\n\n    // merge with the changes that always need to be applied\n    const update = foundry.utils.mergeObject(changes, this._getFlagFixObject(original, uuid));\n\n    // backfill the 'charges' and 'target' for parent-item-charge consumption style spells\n    if (foundry.utils.getProperty(changes, 'system.consume.amount')) {\n      foundry.utils.mergeObject(update, {\n        'system.consume.type': 'charges',\n        'system.consume.target': this.item.id\n      });\n    }\n\n    const childItem = new Item.implementation(original.toObject(), {\n      temporary: true,\n      keepId: false,\n      parent: this.item.parent,\n      \n    });\n    await childItem.updateSource(update);\n\n    return childItem;\n  }\n\n  /**\n   * Get a cached copy of temporary items or create and cache those items with the changes from flags applied.\n   * @returns {Promise<Map<string, Item5e>>} - array of temporary items created from the uuids and changes attached to this item\n   */\n  async _getItemSpellItems() {\n    const itemMap = new Map();\n\n    await Promise.all(\n      this.itemSpellList.map(async ({uuid, changes}) => {\n        const childItem = await this._getChildItem({uuid, changes});\n\n        if (!childItem) return;\n\n        itemMap.set(childItem.id, childItem);\n        return childItem;\n      })\n    );\n\n    this._itemSpellItems = itemMap;\n    return itemMap;\n  }\n\n  /**\n   * Get or Create a cached map of child spell item \"ids\" to their flags\n   * Useful when updating overrides for a specific 'child spell'\n   * @returns {Map<string, object>} - Map of ids to flags\n   */\n  _getItemSpellFlagMap() {\n    const map = new Map();\n    this.itemSpellList.forEach((itemSpellFlag) => {\n      const id = itemSpellFlag.uuid.split('.').pop();\n      map.set(id, itemSpellFlag);\n    });\n    this._itemSpellFlagMap = map;\n    return map;\n  }\n\n  /**\n   * Returns an object to merge into the spells object to apply/fix flags\n   * @param {string} providedUuid\n   * @returns {object}\n   */\n  _getFlagFixObject(item, providedUuid) {\n    // Foundry v12 uses '_stats.compendiumSource' instead of 'flags.core.sourceId'\n    const sourceIdFlag = foundry.utils.isNewerVersion(game.version, \"11.999\") ? '_stats.compendiumSource' : 'flags.core.sourceId';\n    const changes = {\n      [sourceIdFlag]: providedUuid, // set the sourceId as the original spell\n      [`flags.${IWS.MODULE_ID}.${IWS.FLAGS.parentItem}`]: this.item.uuid,\n      'system.preparation.mode': 'atwill'\n    };\n    const tidy5eSectionFlag = item.flags['tidy5e-sheet']?.section;\n    if (tidy5eSectionFlag) {\n      changes['flags.tidy5e-sheet.section'] = null;\n    }\n    return changes;\n  }\n\n  /**\n   * Adds a given UUID to the item's spell list\n   * @param {string} providedUuid\n   */\n  async addSpellToItem(providedUuid) {\n    // MUTATED if this is an owned item\n    let uuid = providedUuid;\n\n    if (this.item.isEmbedded) {\n      // if this item is already on an actor, we need to\n      // 0. see if the uuid is already on the actor\n      // 1. create the dropped uuid on the Actor's item list (OR update that item to be a child of this one)\n      // 2. get the new uuid from the created item\n      // 3. add that uuid to this item's flags\n      const fullItemData = await fromUuid(uuid);\n\n      if (!fullItemData) {\n        ui.notifications.error('Item data for', uuid, 'not found');\n        return;\n      }\n      const changes = this._getFlagFixObject(fullItemData, providedUuid);\n      const adjustedItemData = foundry.utils.mergeObject(fullItemData.toObject(), changes);\n\n      const [newItem] = await this.item.actor.createEmbeddedDocuments('Item', [adjustedItemData]);\n      uuid = newItem.uuid;\n    }\n\n    const itemSpells = [...this.itemSpellList, {uuid}];\n\n    // this update should not re-render the item sheet because we need to wait until we refresh to do so\n    const property = `flags.${IWS.MODULE_ID}.${IWS.FLAGS.itemSpells}`;\n    await this.item.update({[property]: itemSpells}, {render: false});\n\n    await this.refresh();\n\n    // now re-render the item and actor sheets\n    this.item.render();\n    if (this.item.actor) this.item.actor.render();\n  }\n\n  /**\n   * Removes the relationship between the provided item and this item's spells\n   * @param {string} itemId - the id of the item to remove\n   * @param {Object} options\n   * @param {boolean} [options.alsoDeleteEmbeddedSpell] - Should the spell be deleted also, only for owned items\n   * @returns {Item} the updated or deleted spell after having its parent item removed, or null\n   */\n  async removeSpellFromItem(itemId, {alsoDeleteEmbeddedSpell} = {}) {\n    const itemToDelete = this.itemSpellItemMap.get(itemId);\n\n    // If owned, we are storing the actual owned spell item's uuid. Else we store the source id.\n    const uuidToRemove = this.item.isEmbedded ? itemToDelete.uuid : await itemToDelete.getFlag(\"core\", \"sourceId\");\n    const newItemSpells = this.itemSpellList.filter(({uuid}) => uuid !== uuidToRemove);\n\n    // update the data manager's internal store of the items it contains\n    this._itemSpellItems?.delete(itemId);\n    this._itemSpellFlagMap?.delete(itemId);\n\n    await this.item.setFlag(IWS.MODULE_ID, IWS.FLAGS.itemSpells, newItemSpells);\n\n    // Nothing more to do for unowned items.\n    if (!this.item.isEmbedded) return;\n\n    // remove the spell's `parentItem` flag\n    const spellItem = fromUuidSync(uuidToRemove);\n\n    // the other item has already been deleted, probably do nothing.\n    if (!spellItem) return;\n\n    const shouldDeleteSpell = alsoDeleteEmbeddedSpell && (await Dialog.confirm({\n      title: game.i18n.localize(\"IWS.MODULE_NAME\"),\n      content: game.i18n.localize(\"IWS.WARN_ALSO_DELETE\")\n    }));\n\n    if (shouldDeleteSpell) return spellItem.delete();\n    else return spellItem.unsetFlag(IWS.MODULE_ID, IWS.FLAGS.parentItem);\n  }\n\n  /**\n   * Updates the given item's overrides\n   * @param {*} itemId - spell attached to this item\n   * @param {*} overrides - object describing the changes that should be applied to the spell\n   */\n  async updateItemSpellOverrides(itemId, overrides) {\n    const itemSpellFlagsToUpdate = this.itemSpellFlagMap.get(itemId);\n    itemSpellFlagsToUpdate.changes = overrides;\n    this.itemSpellFlagMap.set(itemId, itemSpellFlagsToUpdate);\n    const newItemSpellsFlagValue = [...this.itemSpellFlagMap.values()];\n\n    // this update should not re-render the item sheet because we need to wait until we refresh to do so\n    await this.item.update({[`flags.${IWS.MODULE_ID}.${IWS.FLAGS.itemSpells}`]: newItemSpellsFlagValue}, {render: false});\n\n    // update this data manager's understanding of the items it contains\n    await this.refresh();\n\n    ItemsWithSpells5eItemSheet.instances.forEach((instance) => {\n      if (instance.itemWithSpellsItem === this) instance._shouldOpenSpellsTab = true;\n    });\n\n    // now re-render the item sheets\n    this.item.render();\n  }\n\n  /**\n   * For API - Get the spells of an item\n   * @public\n   * @param {Item5e[]} item The item to get the attached spells from\n   * @param {boolean} embeddedOnly Only return the items owned by the same actor\n   * @param {Map} providedItems Only return spells included in these items (e.g. pass actor.items)\n   * @returns Map of the items or `null` if item has no spells attached.\n   * Also `null` if embeddedOnly is true and item is not owned by an actor\n   */\n  static async getItemSpells(item, embeddedOnly = false, providedItems = false) {\n    if (typeof item === \"string\") item = await fromUuid(item);\n    if (embeddedOnly && !item.isEmbedded) return null;\n    const ItemsWithSpellsItem = new ItemsWithSpells5eItem(item);\n    if (!ItemsWithSpellsItem.itemSpellList.length) return null;\n    const items = providedItems ?? embeddedOnly ? item.actor?.items : false;\n    if (embeddedOnly && !items) {\n      return null;\n    } else if (items) {\n      const spells = new Map();\n      const itemIds = [item.id ?? item._id, item.uuid];\n      items.forEach(spell => {\n        const parentId = IWS.getSpellParentId(spell);\n        if (itemIds.includes(parentId)) spells.set(spell.id, spell);\n      });\n      return spells;\n    } else {\n      return await ItemsWithSpellsItem.itemSpellItemMap;\n    }\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\nimport {ItemsWithSpells5eItemSpellOverrides} from './item-spell-overrides.js';\nimport {ItemsWithSpells5eItem} from './item.js';\n\nexport {ItemsWithSpells5eItem} // to avoid a circular dependency\n\n/**\n * A class made to make managing the operations for an Item sheet easier.\n */\nexport class ItemsWithSpells5eItemSheet {\n  /** A boolean to set when we are causing an item update we know should re-open to this tab */\n  _shouldOpenSpellsTab = false;\n\n  constructor(app, [html]) {\n    this.app = app;\n    this.item = app.item;\n    this.sheetHtml = html;\n    this.itemWithSpellsItem = new ItemsWithSpells5eItem(this.item);\n  }\n\n  /** MUTATED: All open ItemSheet have a cached instance of this class */\n  static instances = new Map();\n\n  /**\n   * Handles the item sheet render hooks.\n   */\n  static init() {\n    Hooks.on('renderItemSheet', (app, html) => {\n      // stop if item type is not included or this sheet is tidy5e\n      if ( game.modules.get('tidy5e-sheet')?.api?.isTidy5eItemSheet(app) || !IWS.isIncludedItemType(app.item.type) ) return; // don't do this for tidy5e\n\n      const instance = ItemsWithSpells5eItemSheet.instances.get(app.appId);\n      if (instance) {\n        instance.renderLite();\n        if (instance._shouldOpenSpellsTab) {\n          app._tabs?.[0]?.activate?.('spells');\n          instance._shouldOpenSpellsTab = false;\n        }\n        return;\n      }\n      const newInstance = new ItemsWithSpells5eItemSheet(app, html);\n      ItemsWithSpells5eItemSheet.instances.set(app.appId, newInstance);\n      return newInstance.renderLite();\n    });\n\n    // clean up instances as sheets are closed\n    Hooks.on('closeItemSheet', async (app) => {\n      if (ItemsWithSpells5eItemSheet.instances.get(app.appId)) {\n        return ItemsWithSpells5eItemSheet.instances.delete(app.appId);\n      }\n    });\n\n    // tidy5e\n    Hooks.once('tidy5e-sheet.ready', (api) => {\n      const myTab = new api.models.HtmlTab({\n        title: game.i18n.localize(\"TYPES.Item.spellPl\"),\n        tabId: 'items-with-spells-5e',\n        html: '',\n        enabled(data) {\n          return IWS.isIncludedItemType(data.item.type);\n        },\n        onRender(params) {\n          if (!IWS.isIncludedItemType(params.data.item.type)) return;\n          let app = params.app;\n          let html = [params.element];\n          const instance = ItemsWithSpells5eItemSheet.instances.get(app.appId);\n          if (instance) {\n            instance.renderHeavy(params.tabContentsElement);\n          } else {\n            const newInstance = new ItemsWithSpells5eItemSheet(app, html);\n            ItemsWithSpells5eItemSheet.instances.set(app.appId, newInstance);\n            newInstance.renderHeavy(params.tabContentsElement);\n          };\n        }\n      });\n      api.registerItemTab(myTab, { autoHeight: true });\n    });\n  }\n\n  /**\n   * Renders the spell tab template to be injected\n   */\n  async _renderSpellsList() {\n    const itemSpellsArray = [...(await this.itemWithSpellsItem.itemSpellItemMap).values()];\n\n    return renderTemplate(IWS.TEMPLATES.spellsTab, {\n      itemSpells: itemSpellsArray,\n      config: {\n        limitedUsePeriods: CONFIG.DND5E.limitedUsePeriods,\n        abilities: CONFIG.DND5E.abilities,\n      },\n      isEmbedded: this.item.isEmbedded,\n      isOwner: this.item.isOwner,\n      concealDetails: !game.user.isGM && (this.item.system.identified === false)\n    });\n  }\n\n  /**\n   * Ensure the item dropped is a spell, add the spell to the item flags.\n   * @returns Promise that resolves when the item has been modified\n   */\n  async _dragEnd(event) {\n    if (!this.app.isEditable) return;\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== 'Item') return;\n    const item = fromUuidSync(data.uuid);\n    if (item.type !== 'spell') return;\n    // set the flag to re-open this tab when the update completes\n    this._shouldOpenSpellsTab = true;\n    return this.itemWithSpellsItem.addSpellToItem(data.uuid);\n  }\n\n  /**\n   * Event Handler that opens the item's sheet\n   */\n  async _handleItemClick(event) {\n    const itemId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    const item = this.itemWithSpellsItem.itemSpellItemMap.get(itemId);\n    item?.sheet.render(true, {editable: !!item.isOwner && !!item.isEmbedded});\n  }\n\n  /**\n   * Event Handler that removes the link between this item and the spell\n   */\n  async _handleItemDeleteClick(event) {\n    const itemId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    // set the flag to re-open this tab when the update completes\n    this._shouldOpenSpellsTab = true;\n    return this.itemWithSpellsItem.removeSpellFromItem(itemId);\n  }\n\n  /**\n   * Event Handler that also Deletes the embedded spell\n   */\n  async _handleItemDestroyClick(event) {\n    const itemId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    // set the flag to re-open this tab when the update completes\n    this._shouldOpenSpellsTab = true;\n    return this.itemWithSpellsItem.removeSpellFromItem(itemId, {alsoDeleteEmbeddedSpell: true});\n  }\n\n  /**\n   * Event Handler that opens the item's sheet or config overrides, depending on if the item is owned\n   */\n  async _handleItemEditClick(event) {\n    const itemId = event.currentTarget.closest(\"[data-item-id]\").dataset.itemId;\n    const item = this.itemWithSpellsItem.itemSpellItemMap.get(itemId);\n    if (item.isEmbedded) return item.sheet.render(true);\n    // pop up a formapp to configure this item's overrides\n    return new ItemsWithSpells5eItemSpellOverrides(this.itemWithSpellsItem, itemId).render(true);\n  }\n\n  /**\n   * Synchronous part of the render which calls the asynchronous `renderHeavy`\n   * This allows for less delay during the update -> renderItemSheet -> set tab cycle\n   */\n  renderLite() {\n    // Update the nav menu\n    const div = document.createElement(\"DIV\");\n    div.innerHTML = `<a class=\"item\" data-tab=\"spells\">${game.i18n.localize(\"TYPES.Item.spellPl\")}</a>`;\n    const tabs = this.sheetHtml.querySelector(\".tabs[data-group=primary]\");\n    if (!tabs) return;\n    tabs.appendChild(div.firstElementChild);\n\n    // Create the tab\n    const sheetBody = this.sheetHtml.querySelector(\".sheet-body\");\n    div.innerHTML = \"<div class='tab spells flexcol' data-group='primary' data-tab='spells'></div>\";\n    const c = div.firstElementChild;\n    sheetBody.appendChild(c);\n    this.renderHeavy(c);\n  }\n\n  /**\n   * Heavy lifting part of the spells tab rendering which involves getting the spells and painting them.\n   * @param {HTMLElement} spellsTab\n   */\n  async renderHeavy(spellsTab) {\n    // Add the list to the tab\n    const div = document.createElement(\"DIV\");\n    div.innerHTML = await this._renderSpellsList();\n    const c = div.firstElementChild;\n    spellsTab.appendChild(c);\n\n    // Activate Listeners for this ui.\n    c.querySelectorAll(\".item-name\").forEach(n => n.addEventListener(\"click\", this._handleItemClick.bind(this)));\n    c.querySelectorAll(\".item-delete\").forEach(n => n.addEventListener(\"click\", this._handleItemDeleteClick.bind(this)));\n    c.querySelectorAll(\".item-destroy\").forEach(n => n.addEventListener(\"click\", this._handleItemDestroyClick.bind(this)));\n    c.querySelectorAll(\".configure-overrides\").forEach(n => n.addEventListener(\"click\", this._handleItemEditClick.bind(this)));\n\n    // Register a DragDrop handler for adding new spells to this item\n    const dragDrop = {\n      dragSelector: \".item\",\n      dropSelector: \".items-with-spells-tab\",\n      permissions: {drop: () => this.app.isEditable && !this.item.isEmbedded},\n      callbacks: {drop: this._dragEnd},\n    };\n    this.app.element[0].querySelector(dragDrop.dropSelector).addEventListener(\"drop\", dragDrop.callbacks.drop.bind(this));\n  }\n}\n","import {ItemsWithSpells5e as IWS} from './defaults.js';\n\n// the item types that can NEVER have spells in them.\nexport const EXCLUDED_TYPES = [\n  \"class\",\n  \"subclass\",\n  \"background\",\n  \"race\",\n  \"lineage\",\n  \"spell\",\n  \"base\",\n  \"container\",\n  \"backpack\"\n];\n\nexport function _registerSettings() {\n  const TYPES = Item.TYPES.filter(t => !EXCLUDED_TYPES.includes(t));\n\n  for (const type of TYPES) {\n    game.settings.register(IWS.MODULE_ID, `isIncludedItemType${type.titleCase()}`, {\n      scope: \"world\",\n      config: false,\n      type: Boolean,\n      default: true,\n      requiresReload: true\n    });\n  }\n\n  game.settings.register(IWS.MODULE_ID, \"sortOrder\", {\n    name: \"IWS.SETTINGS.SORT_ORDER.NAME\",\n    hint: \"IWS.SETTINGS.SORT_ORDER.HINT\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: false,\n    requiresReload: false\n  });\n\n  game.settings.registerMenu(IWS.MODULE_ID, \"itemTypeExclusion\", {\n    name: \"IWS.SETTINGS.ITEM_EXCLUSION.NAME\",\n    hint: \"IWS.SETTINGS.ITEM_EXCLUSION.HINT\",\n    scope: \"world\",\n    config: true,\n    type: IWS_TypeSettings,\n    label: \"IWS.SETTINGS.ITEM_EXCLUSION.NAME\",\n    restricted: true\n  });\n\n  game.settings.register(IWS.MODULE_ID, \"excludeUnequipped\", {\n    name: \"IWS.SETTINGS.EXCLUDE_UNEQUIPPED.NAME\",\n    hint: \"IWS.SETTINGS.EXCLUDE_UNEQUIPPED.HINT\",\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: true,\n    requiresReload: false\n  });\n}\n\nclass IWS_TypeSettings extends FormApplication {\n\n  get id() {\n    return `${IWS.MODULE_ID}-item-type-exclusion-menu`;\n  }\n\n  get title() {\n    return game.i18n.localize(\"IWS.SETTINGS.ITEM_EXCLUSION.TITLE\");\n  }\n\n  get template() {\n    return \"modules/items-with-spells-5e/templates/settingsMenu.hbs\";\n  }\n\n  async getData() {\n    const TYPES = Item.TYPES.filter(t => !EXCLUDED_TYPES.includes(t));\n    const data = await super.getData();\n    data.types = [];\n    for (const type of TYPES) {\n      const label = type.titleCase();\n      data.types.push({\n        checked: game.settings.get(IWS.MODULE_ID, `isIncludedItemType${label}`),\n        value: type,\n        label\n      });\n    }\n    return data;\n  }\n\n  async _updateObject(event, formData) {\n    Object.entries(formData).forEach(([type, bool]) => {\n      game.settings.set(IWS.MODULE_ID, `isIncludedItemType${type.titleCase()}`, bool);\n    });\n  }\n}\n","import {ItemsWithSpells5e as IWS} from '../classes/defaults.js';\r\nimport {ItemsWithSpells5eItem as IWSitem} from '../classes/item.js';\r\nimport {EXCLUDED_TYPES} from '../classes/settings.mjs';\r\n\r\nlet ItemsWithSpellsActionHandlerExtender = null\r\n\r\nexport class ItemsWithSpells5eExtendHUD {\r\n  static init() {\r\n    // only if both TAH Core and DnD5e modules are installed and active\r\n    if (!game.modules.get('token-action-hud-core')?.active || !game.modules.get('token-action-hud-dnd5e')?.active || !foundry.utils.isNewerVersion(game.modules.get('token-action-hud-dnd5e')?.version, '1.5.6')) return\r\n\r\n    // Create the parent group\r\n    Hooks.once(\"tokenActionHudCoreRegisterDefaults\", async (defaults) => {\r\n      const name = \"Items with Spells\"\r\n      const spellsLayout = defaults.layout.find(obj => obj.id === 'spells')\r\n      const newGroup = {\r\n        id: IWS.MODULE_ID,\r\n        name,\r\n        listName: `Group: ${name}`,\r\n        type: 'system',\r\n        nestId: `spells_${IWS.MODULE_ID}`\r\n      }\r\n      // Add the group\r\n      defaults.groups.push(newGroup)\r\n      // Make it visible at the top of the Spells tab by default\r\n      spellsLayout.groups.unshift(newGroup)\r\n    })\r\n\r\n    // Extend the class for making a sub-group per item and adding their spells to it\r\n    Hooks.once('tokenActionHudCoreApiReady', async (coreModule) => {\r\n      ItemsWithSpellsActionHandlerExtender = class ItemsWithSpellsActionHandlerExtender extends coreModule.api.ActionHandlerExtender {\r\n\r\n        constructor(actionHandler) {\r\n          super();\r\n          this.actionHandler = actionHandler\r\n          this.actor = null\r\n          this.iwsExcludeUnequipped = null\r\n        }\r\n\r\n        /**\r\n         * Extend the action list\r\n         * @override\r\n         */\r\n        async extendActionHandler () {\r\n          this.actor = this.actionHandler.actor\r\n          if (!this.actor) return\r\n\r\n          this.iwsExcludeUnequipped = game.settings.get(IWS.MODULE_ID, \"excludeUnequipped\")\r\n\r\n          const parentGroupData = {\r\n              id: IWS.MODULE_ID,\r\n              type: 'system'\r\n          }\r\n\r\n          // iterate over all the items of this actor\r\n          for (const [key, item] of this.actor.items.entries()) {\r\n\r\n            // skip excluded item types\r\n            if ( EXCLUDED_TYPES.includes(item.type) ) continue\r\n\r\n            // skip if item's spells aren't usable\r\n            const itemUsable = IWS.isUsableItem(item)\r\n            if ( !itemUsable ) continue\r\n\r\n            // get spells of item\r\n            const itemSpells = await IWSitem.getItemSpells(item, true, this.actor.items)\r\n            if ( !itemSpells ) continue\r\n\r\n            // Create a group for this item\r\n            const info1 = {}\r\n            const uses = item?.system?.uses\r\n            if (uses?.per && (uses.value > 0 || uses.max > 0)) {\r\n              const per = coreModule.api.Utils.i18n('DND5E.per')\r\n              const period = CONFIG.DND5E.limitedUsePeriods[uses.per]?.label ?? uses.per\r\n              const perPeriod = uses.per === 'charges' ? period : `${per} ${period}`\r\n              info1.text = `${uses.value ?? '0'}${uses.max > 0 ? `/${uses.max}` : ''}`\r\n              info1.title = `${item.name}: ${info1.text} ${perPeriod}`\r\n            }\r\n            const groupData = {\r\n                id: `${IWS.MODULE_ID}_${item.id}`,\r\n                name: item.name,\r\n                type: 'system-derived',\r\n                info1,\r\n                defaultSelected: true,\r\n                settings: { sort: true }\r\n            }\r\n\r\n            // Add group to HUD\r\n            this.actionHandler.addGroup(groupData, parentGroupData)\r\n\r\n            // Add actions to the group, using the TAH DnD5e Build Actions\r\n            const data = {\r\n              groupData: groupData,\r\n              actionData: itemSpells,\r\n              actionType: 'spell'\r\n            }\r\n            await this.actionHandler.buildActions(data)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // Add the new class to TAH workflow\r\n    Hooks.once(\"tokenActionHudCoreAddActionHandlerExtenders\", async (actionHandler) => {\r\n      actionHandler.addActionHandlerExtender(new ItemsWithSpellsActionHandlerExtender(actionHandler))\r\n    })\r\n\r\n  }\r\n}\r\n","\nimport {ItemsWithSpells5e} from './classes/defaults.js';\nimport {ItemsWithSpells5eActorSheet} from './classes/actor-sheet.js';\nimport {ItemsWithSpells5eActor} from './classes/actor.js';\nimport {ItemsWithSpells5eItem} from './classes/item-sheet.js';\nimport {ItemsWithSpells5eItemSheet} from './classes/item-sheet.js';\nimport {_registerSettings} from './classes/settings.mjs';\nimport {ItemsWithSpells5eExtendHUD} from './extensions/token-action-hud-dnd5e.js';\n\nHooks.once(\"setup\", _registerSettings);\nHooks.once(\"init\", ItemsWithSpells5eActor.init);\nHooks.once(\"init\", ItemsWithSpells5eActorSheet.init);\nHooks.once(\"init\", ItemsWithSpells5e.init);\nHooks.once(\"init\", ItemsWithSpells5eItemSheet.init);\nHooks.once(\"init\", ItemsWithSpells5eExtendHUD.init);\nHooks.once(\"ready\", async () => {\n  const module = game.modules.get(ItemsWithSpells5e.MODULE_ID);\n  module.api = {\n    isIwsItem: ItemsWithSpells5e.isIwsItem,\n    isIwsSpell: ItemsWithSpells5e.isIwsSpell,\n    getItemSpells: ItemsWithSpells5eItem.getItemSpells,\n    getSpellParentId: ItemsWithSpells5e.getSpellParentId,\n    getSpellParentItem: ItemsWithSpells5e.getSpellParentItem,\n    isIncludedItemType: ItemsWithSpells5e.isIncludedItemType,\n    isUsableItem: ItemsWithSpells5e.isUsableItem\n  }\n});"],"names":["ItemsWithSpells5e","static","itemSpells","parentItem","spellsTab","MODULE_ID","overrides","init","preloadTemplates","dnd5e","utils","registerHandlebarsHelpers","loadTemplates","TEMPLATES","isIwsItem","item","getFlag","FLAGS","isIwsSpell","spell","getSpellParentId","getSpellParentItem","embeddedOnly","providedItems","isEmbedded","parentId","items","actor","parentIdLast","split","pop","get","fromUuid","isIncludedItemType","itemType","include","game","settings","titleCase","isUsableItem","system","identified","equipped","user","isGM","foundry","isNewerVersion","version","attunementRequired","attunement","attuned","CONFIG","DND5E","attunementTypes","REQUIRED","ItemsWithSpells5eActorSheet","id","IWS","fn","prepareItemSpellbook","forEach","a","libWrapper","register","wrapped","data","spells","order","nonItemSpells","spellsPerItem","Map","this","some","uuid","includes","set","push","spellbook","filter","fl","length","type","iws","iwsSpells","section","uses","label","name","usesSlots","canCreate","canPrepare","value","slots","max","override","dataset","prop","createSection","sort","b","ItemsWithSpells5eActor","Hooks","on","handleCreateItem","handleDeleteItem","itemDeleted","options","userId","parent","Actor","spellIds","reduce","acc","flag","itemsWithSpells5e","alsoDeleteChildSpells","Dialog","confirm","title","i18n","localize","content","deleteEmbeddedDocuments","itemCreated","spellUuids","spellData","Promise","all","map","d","_createSpellData","s","ids","createEmbeddedDocuments","setFlag","changes","attackBonus","ability","usesMax","rollData","getRollData","deterministic","simplifyBonus","consume","amount","target","fromCompendium","mergeData","tidy5eSectionFlag","flags","mergeObject","ItemsWithSpells5eItemSpellOverrides","FormApplication","constructor","itemWithSpellsItem","itemSpellId","itemSpellFlagData","itemSpellFlagMap","super","itemSpellItem","itemSpellItemMap","defaultOptions","classes","template","width","closeOnSubmit","submitOnChange","height","getData","hasAttack","hasSave","save","object","config","limitedUsePeriods","abilities","spellLevels","saveScaling","flat","isFlatDC","scaling","hasUses","hasLimitedUses","per","_updateObject","event","formData","formDataExpanded","expandObject","updateItemSpellOverrides","ui","notifications","warn","SubmitEvent","close","render","ItemsWithSpells5eItem","_itemSpellFlagMap","_itemSpellItems","_getItemSpellFlagMap","itemSpellList","_getItemSpellItems","refresh","_getChildItem","original","Item","implementation","img","description","_id","temporary","FakeEmptySpell","update","_getFlagFixObject","getProperty","childItem","toObject","keepId","updateSource","itemMap","async","itemSpellFlag","providedUuid","sourceIdFlag","addSpellToItem","fullItemData","error","adjustedItemData","newItem","property","removeSpellFromItem","itemId","alsoDeleteEmbeddedSpell","itemToDelete","uuidToRemove","newItemSpells","delete","spellItem","fromUuidSync","unsetFlag","itemSpellFlagsToUpdate","newItemSpellsFlagValue","values","ItemsWithSpells5eItemSheet","instances","instance","_shouldOpenSpellsTab","getItemSpells","ItemsWithSpellsItem","itemIds","app","html","sheetHtml","modules","api","isTidy5eItemSheet","appId","renderLite","_tabs","activate","newInstance","once","myTab","models","HtmlTab","tabId","enabled","onRender","params","element","renderHeavy","tabContentsElement","registerItemTab","autoHeight","_renderSpellsList","itemSpellsArray","renderTemplate","isOwner","concealDetails","_dragEnd","isEditable","TextEditor","getDragEventData","_handleItemClick","currentTarget","closest","sheet","editable","_handleItemDeleteClick","_handleItemDestroyClick","_handleItemEditClick","div","document","createElement","innerHTML","tabs","querySelector","appendChild","firstElementChild","sheetBody","c","querySelectorAll","n","addEventListener","bind","dragDrop","dragSelector","dropSelector","permissions","drop","callbacks","EXCLUDED_TYPES","IWS_TypeSettings","TYPES","t","types","checked","Object","entries","bool","ItemsWithSpellsActionHandlerExtender","ItemsWithSpells5eExtendHUD","active","defaults","spellsLayout","layout","find","obj","newGroup","listName","nestId","groups","unshift","coreModule","ActionHandlerExtender","actionHandler","iwsExcludeUnequipped","extendActionHandler","parentGroupData","key","IWSitem","info1","Utils","period","perPeriod","text","groupData","defaultSelected","addGroup","actionData","actionType","buildActions","addActionHandlerExtender","_registerSettings","scope","Boolean","default","requiresReload","hint","registerMenu","restricted"],"mappings":"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"}